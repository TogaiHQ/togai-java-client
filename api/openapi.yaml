openapi: 3.0.3
info:
  contact:
    email: engg@togai.com
  description: APIs for Togai App
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Togai Apis
  version: "1.0"
externalDocs:
  description: Find out more about Togai
  url: https://docs.togai.com/docs
servers:
- description: Api endpoint
  url: https://api.togai.com/
- description: Sandbox api endpoint
  url: https://sandbox-api.togai.com/
security:
- bearerAuth: []
tags:
- description: Customer level calls
  name: Customers
- description: Account level calls
  name: Accounts
- description: Event Schema level calls
  name: Event Schemas
- description: Usage Meter level calls
  name: Usage Meters
- description: Price Plan level calls
  name: Price Plans
- description: APIs for getting events ingested in Togai
  externalDocs:
    description: docs
    url: https://togai.com/docs/billing/events
  name: Event Management
- description: APIs for getting Togai metrics
  externalDocs:
    description: docs
    url: https://togai.com/docs/metrics
  name: Metrics
paths:
  /customers:
    get:
      description: Returns a list of customers with pagination and sort.
      operationId: getCustomers
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                CustomerPaginatedResponse:
                  $ref: '#/components/examples/CustomerPaginatedResponse'
              schema:
                $ref: '#/components/schemas/CustomerPaginatedResponse'
          description: Response for list customers request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List customers
      tags:
      - Customers
      x-accepts: application/json
    post:
      description: This API let’s you to create customers and corresponding accounts.
      operationId: createCustomer
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomerRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                CreateCustomerResponse:
                  $ref: '#/components/examples/CreateCustomerResponse'
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
          description: Response for Create customer request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}:
    delete:
      description: This API let’s you to delete a customer using customer_id.
      operationId: deleteCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete a customer
      tags:
      - Customers
      x-accepts: application/json
    get:
      description: Get customer information using customer_id.
      operationId: getCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Customer'
              schema:
                $ref: '#/components/schemas/Customer'
          description: Response for Get customer requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a customer
      tags:
      - Customers
      x-accepts: application/json
    patch:
      description: This API let’s you to update a customer’s information using customer_id.
      operationId: updateCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Customer'
              schema:
                $ref: '#/components/schemas/Customer'
          description: Response for Get customer requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts:
    get:
      description: Returns a list of accounts of a customer with pagination and sort.
      operationId: getAccounts
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                AccountPaginatedResponse:
                  $ref: '#/components/examples/AccountPaginatedResponse'
              schema:
                $ref: '#/components/schemas/AccountPaginatedResponse'
          description: Response for list customers request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List accounts of customer
      tags:
      - Accounts
      x-accepts: application/json
    post:
      description: This API let’s you to create an account for a customer using customer_id.
      operationId: createAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateAccountRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}:
    delete:
      description: This API let’s you to delete a customer using customer_id and account_id.
      operationId: deleteAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an account
      tags:
      - Accounts
      x-accepts: application/json
    get:
      description: Get account information using customer_id and account_id.
      operationId: getAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an account
      tags:
      - Accounts
      x-accepts: application/json
    patch:
      description: This API let’s you to update an account’s information using customer_id
        and account_id.
      operationId: updateAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}/add_aliases:
    post:
      description: Add aliases to an account using customer_id and account_id.
      operationId: addAliases
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AddAccountAliasesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add Aliases to account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}/remove_aliases:
    post:
      description: Remove existing aliases tagged to an account using this API
      operationId: removeAliases
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/RemoveAccountAliasesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Remove Aliases to account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}/price_plans:
    post:
      description: This API let’s you to assign a price plan to an existing account
      operationId: associatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AssociatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                AssociatePricePlanResponse:
                  $ref: '#/components/examples/AssociatePricePlanResponse'
              schema:
                $ref: '#/components/schemas/AssociatePricePlanResponse'
          description: Response for associate price plan request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Associate a plan to an account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /event_schema:
    get:
      description: Returns a list of event schema with pagination and sort.
      operationId: listEventSchemas
      parameters:
      - description: Filter by provided statuses
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ASC
          - DESC
          example: ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchemaPaginatedResponse:
                  $ref: '#/components/examples/EventSchemaListPaginatedResponse'
              schema:
                $ref: '#/components/schemas/EventSchemaListPaginatedResponse'
          description: Response for list events request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List event schemas
      tags:
      - Event Schemas
      x-accepts: application/json
    post:
      description: Create an event schema with attributes and dimensions to process
        events.
      operationId: createEventSchema
      requestBody:
        $ref: '#/components/requestBodies/CreateEventSchemaRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an event schema
      tags:
      - Event Schemas
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}:
    delete:
      description: "To delete(archive) an event schema, you’re required to archive\
        \ associated active usage meters if any."
      operationId: deleteEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
    get:
      description: Get an event schema
      operationId: getEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: 2
              format: int32
              type: integer
        description: Optional version to get a specific version. Gets latest version
          if it is not provided.
        explode: true
        in: query
        name: version
        required: false
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
    patch:
      description: "Update an event schema and add new attributes and dimensions\n\
        \nOnce an event schema is activated, you cannot update or delete existing\
        \ attributes and dimensions however you can add new attributes and dimensions\
        \ and update event schema description.\n    operationId: updateEventSchema\n"
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateEventSchemaRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an event schema
      tags:
      - Event Schemas
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/versions:
    get:
      description: Get a list of all the versions of an event schema
      operationId: listEventSchemaVersions
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchemaVersionsResponse:
                  $ref: '#/components/examples/EventSchemaVersionsResponse'
              schema:
                $ref: '#/components/schemas/EventSchemaVersionsResponse'
          description: Response for list event schema versions request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List all event schema versions
      tags:
      - Event Schemas
      x-accepts: application/json
  /event_schema/{event_schema_name}/activate:
    post:
      description: Activate an event schema
      operationId: activateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
  /event_schema/{event_schema_name}/deactivate:
    post:
      description: "You can deactivate an event schema using this API. In case you\
        \ have an activate usage meter associated with the event schema, you will\
        \ need to deactivate it first and then try deactivating the event schema.\n"
      operationId: deactivateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Deactivate an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters:
    get:
      description: Get a list of usage meters associated with an event schema
      operationId: getUsageMetersForEventSchema
      parameters:
      - description: |
          Filter usage meter by it’s current active/inactive state to aggregate across state level usage meters. Aggregation param is mandatory if you’re passing value in this.
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        style: form
      - description: "This parameter will aggregate across usage meter level using\
          \ the processed usage meter value. Read more about [usage meter](https://docs.togai.com/docs/usagemeter).\
          \ Statuses param is mandatory if you’re passing value in this.\n"
        explode: true
        in: query
        name: aggregations
        required: false
        schema:
          enum:
          - SUM
          - COUNT
          type: string
        style: form
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                UsageMeterPaginatedResponse:
                  $ref: '#/components/examples/UsageMeterPaginatedResponse'
              schema:
                $ref: '#/components/schemas/UsageMeterPaginatedResponse'
          description: Response for list usage_meters request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List usage meters for event schema
      tags:
      - Usage Meters
      x-accepts: application/json
    post:
      description: Create an usage meter and associate with an event schema
      operationId: createUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateUsageMeterRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an usage meter
      tags:
      - Usage Meters
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters/{usage_meter_id}:
    get:
      description: Get an usage meter using event schema name and usage meter id.
      operationId: getUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get usage meter
      tags:
      - Usage Meters
      x-accepts: application/json
    patch:
      description: "Updating an usage meter is supported only for usage meters in\
        \ the DRAFT state currently. In case you like to update an usage meter, we\
        \ suggest you create a new usage meter and associate it with accounts.\n"
      operationId: updateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateUsageMeterRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an usage meter
      tags:
      - Usage Meters
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters/{usage_meter_id}/activate:
    post:
      description: Activate usage meter
      operationId: activateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate usage meter
      tags:
      - Usage Meters
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters/{usage_meter_id}/deactivate:
    post:
      description: |
        Make an existing active usage meter to be inactive

        Only active Usage Meters are allowed to deactivate. Active Usage Meters with active Pricing Plan attached can also be deactivated.
      operationId: deactivateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Deactivate usage meter
      tags:
      - Usage Meters
      x-accepts: application/json
  /price_plans:
    get:
      description: Get a list of price plans
      operationId: getPricePlans
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanPaginatedResponse:
                  $ref: '#/components/examples/PricePlanPaginatedResponse'
              schema:
                $ref: '#/components/schemas/PricePlanPaginatedResponse'
          description: Response for list price plans request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List price plans
      tags:
      - Price Plans
      x-accepts: application/json
    post:
      description: "Create a price plan and associate with customers to it\n\nA price\
        \ plan is a collection of pre-set conditions with prices that convert usage\
        \ metrics into billable value. Price Plans and the roll up of items comprising\
        \ the pricing plans are used to assign a customer to get the final bill value.\
        \ Learn more about [Price plans](https://docs.togai.com/docs/priceplan) from\
        \ our Guides\n"
      operationId: createPricePlan
      requestBody:
        $ref: '#/components/requestBodies/CreatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}:
    get:
      description: Get a price plan details using price plan id
      operationId: getPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a price plan
      tags:
      - Price Plans
      x-accepts: application/json
    patch:
      description: "Update a draft state price plan\n\nOnly DRAFT state Price Plans\
        \ are allowed to Update. Learn more about [Price plans](https://docs.togai.com/docs/priceplan)\
        \ from our Guides\n"
      operationId: updatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}/activate:
    post:
      description: Activate a price plan details using price plan id
      operationId: activatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/ActivatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}/currencies:
    post:
      description: Add currencies to a price plan
      operationId: addCurrencyToPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AddCurrencyToPricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add currencies to a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}/currencies/{currency_id}:
    delete:
      description: Remove a draft currency from a price plan
      operationId: removeCurrencyFromPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: USD
              maxLength: 50
              type: string
        explode: false
        in: path
        name: currency_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Remove a draft currency from a price plan
      tags:
      - Price Plans
      x-accepts: application/json
  /ingest:
    post:
      description: "This API let’s you to ingest events to your Togai account.\n\n\
        Events ingested using this API will be processed via associated usage meters\
        \ and further via associated price plans to generate final billable value\
        \ to invoice the customer\n\nRead more about [Event Ingestion](https://docs.togai.com/docs/event-ingestion)\n"
      operationId: ingest
      requestBody:
        content:
          application/json:
            examples:
              IngestEventRequest:
                $ref: '#/components/examples/IngestEventRequest'
            schema:
              $ref: '#/components/schemas/IngestEventRequest'
        description: Request body to ingest events to Togai usage and billing management
          service.
        required: true
      responses:
        "202":
          description: Successfully accepted to process all the events from payload.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential "x-api-key" is not valid. Please check the response
            message for failure details.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the events as the size of the event payload
            is above the supported limit. Please check our docs for the api limits
            - https://togai.com/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service is currently unavailable to process the request.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Ingest events to Togai
      tags:
      - Event Ingestion
      x-controller-name: EventIngestionController
      x-operation-name: ingest
      x-content-type: application/json
      x-accepts: application/json
  /ingestBatch:
    post:
      description: |-
        This API let’s you to ingest events in batch upto 1000 events.
        Ingest large amounts of events up to 1000 in batches in an array using this API.
      operationId: ingestBatch
      requestBody:
        content:
          application/json:
            examples:
              IngestEventBatchRequest:
                $ref: '#/components/examples/IngestEventBatchRequest'
            schema:
              $ref: '#/components/schemas/IngestBatchEventRequest'
        description: Request body to ingest events in batch to Togai usage and billing
          management service.
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                errors: []
              schema:
                $ref: '#/components/schemas/IngestBatchEventResponse'
          description: Successfully accepted to process all the events from payload.
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBatchEventResponse'
          description: Partial failure. Few events from request were not accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential "x-api-key" is not valid. Please check the response
            message for failure details.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the events as the size of the event payload
            is above the supported limit. Please check our docs for the api limits
            - https://togai.com/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service is currently unavailable to process the request.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Ingest events to Togai in batch
      tags:
      - Event Ingestion
      x-controller-name: EventIngestionController
      x-operation-name: ingestBatch
      x-content-type: application/json
      x-accepts: application/json
  /events:
    get:
      description: This API let’s you to fetch a list of events with multiple query
        parameters
      operationId: getEvents
      parameters:
      - description: Pagination token used as a marker to get records from next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - description: Filter option to filter the events by processed/unprocessed status.
        examples:
          processed:
            value: PROCESSED
          in_progress:
            value: IN_PROGRESS
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Filter option to filter the events based on account id.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          example: "1234"
          type: string
        style: form
      - description: Filter option to filter the events based on schema name.
        explode: true
        in: query
        name: schema_name
        required: false
        schema:
          example: Rides
          type: string
        style: form
      - description: "Maximum page size expected by client to return the record list.\
          \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
          \ page size if no value is provided."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                GetEventsResponse:
                  $ref: '#/components/examples/GetEventsResponse'
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to list events.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the query parameters provided. Please check
            our docs for the api limits - https://togai.io/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a list of usage events with multiple query options
      tags:
      - Event Management
      x-accepts: application/json
  /events/{event_id}:
    get:
      description: Fetch details of a particular event using the event ID.
      operationId: getSingleEvent
      parameters:
      - content:
          application/json:
            schema:
              example: f4a52f2d-b798-4e08-8b24-db0a5a468ba3
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                GetEventResponse:
                  $ref: '#/components/examples/GetEventResponse'
              schema:
                $ref: '#/components/schemas/GetEventResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to get events.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an usage event using event id
      tags:
      - Event Management
      x-accepts: application/json
  /metrics:
    post:
      description: "Togai Metrics API allows you to fetch different metrics from Events\
        \ value, Usage value, revenue metrics with multiple queryable options you\
        \ may require for your business use case.\n\nMake a POST request to the /metrics\
        \ resource to get the metrics. \nA single request can query up to five metrics.\
        \ \nSingle response dataset can contain a maximum of 100 data points.\n"
      operationId: getMetrics
      requestBody:
        $ref: '#/components/requestBodies/GetMetricsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                GetMetricsResponse:
                  $ref: '#/components/examples/GetMetricsResponse'
              schema:
                $ref: '#/components/schemas/GetMetricsResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to get metrics.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get Togai Metrics
      tags:
      - Metrics
      x-content-type: application/json
      x-accepts: application/json
components:
  examples:
    SignupRequest:
      value:
        name: ACME Enterprise
        description: Brief description about ACME
        userDetails:
          name: Lorem Ipsum
          password: blackbELt@314
          email: john@example.com
          phone: +123456789
    CreateCustomerRequest:
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        account:
          id: ACC00001
          name: Primary Account
          invoiceCurrency: USD
          aliases:
          - acme_primary
          - admin@example.com
    UpdateCustomerRequest:
      value:
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: 201 Bleeker Street
    CreateAccountRequest:
      value:
        id: ACC00001
        name: Primary Account
        aliases:
        - acme_primary
        - acme_1
    UpdateAccountRequest:
      value:
        name: New Account Name
    AddAccountAliasesRequest:
      value:
        aliases:
        - account2@acme.com
        - +1234567890
    RemoveAccountAliasesRequest:
      value:
        aliases:
        - account2@acme.com
        - +1234567890
    CreateEventSchemaRequest:
      summary: Create event schema request payload
      value:
        name: ride_completed
        description: Cab ride completed
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: ride_type
    UpdateEventSchemaRequest:
      summary: Update event schema request payload
      value:
        description: Cab ride completed
        status: DRAFT
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: ride_type
    CreateUsageMeterRequest:
      value:
        id: 01BX5ZZKBKACTAV9WEVG
        name: Rides
        description: Cab rides
        type: COUNTER
        aggregation: SUM
        computations:
        - matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation:
            '*':
            - var: attributes.distance
            - 0.4
    CreatePricePlanRequest:
      value:
        name: Rides - Pro plan
        description: ""
        pricePlanDetails:
          pricingCycleConfig:
            interval: MONTHLY
            startOffset:
              dayOffset: "4"
              monthOffset: NIL
            gracePeriod: 3
          rateCards:
          - displayName: Local Rides
            pricingModel: TIERED
            rateConfig:
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              slabs:
              - rate: 100
                priceType: PER_UNIT
                startAfter: 0
                order: 1
              - rate: 40
                priceType: PER_UNIT
                startAfter: 10
                order: 2
              - rate: 10
                priceType: PER_UNIT
                startAfter: 50
                order: 3
    UpdatePricePlanRequest:
      value:
        description: updated description
        pricePlanDetails:
          pricingCycleConfig:
            interval: MONTHLY
            startOffset:
              dayOffset: "6"
              monthOffset: NIL
            gracePeriod: 3
    ActivatePricePlanRequest:
      value:
        currencies:
        - USD
        - INR
    AssociatePricePlanRequest:
      value:
        pricePlanId: pp.1zYnCiM9Bpg.lv25y
        effectiveFrom: 2022-07-04
        effectiveUntil: 2022-10-04
    AddCurrencyToPricePlanRequest:
      value:
        currency: USD
        usageRates:
        - usageMeterId: um.1zYnCiM9Bpg.1zYn
          slabRates:
          - order: 0
            rate: 100
            config:
              minimumValue: 0
    UpdateOrganizationSettingRequest:
      value:
        baseCurrency: USD
    Customer:
      summary: A sample Customer
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        status: ACTIVE
        updatedAt: 2020-07-04T12:00:00.000Z
        createdAt: 2020-07-04T12:00:00.000Z
    CreateCustomerResponse:
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        account:
          id: G234DZZKBKACATFFGVGEMERFH
          name: ACME Enterprise - Account
          invoiceCurrency: USD
          status: ACTIVE
          aliases:
          - alias: G234DZZKBKACATFFGVGEMERFH
            status: ACTIVE
    CustomerPaginatedResponse:
      value:
        data:
        - id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
          name: ACME Enterprise
          primaryEmail: admin@example.com
          billingAddress: "201 Boulevard, WA 53123"
          status: ACTIVE
          createdAt: {}
          updatedAt: {}
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: ASC
    AccountPaginatedResponse:
      value:
        data:
        - id: G234DZZKBKACATFFGVGEMERFI
          name: ACME Enterprise - Account2
          status: ACTIVE
          aliases:
          - alias: account2@acme.com
            status: ACTIVE
          - alias: +1234567890
            status: ARCHIVED
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: ASC
    EventSchemaListPaginatedResponse:
      value:
        data:
        - name: ride_completed
          description: Cab ride completed
          version: 1
          status: DRAFT
          attributes:
          - name: distance
          - name: time
          dimensions:
          - name: city
          - name: ride_type
          usageMetersCount: 10
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: ASC
    UsageMeterPaginatedResponse:
      value:
        data:
        - id: 01BX5ZZKBKACTAV9WEVG
          name: Rides
          description: Cab rides
          type: COUNTER
          aggregation: COUNT
          status: DRAFT
          computations:
          - matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"\
              }, \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\"\
              : \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
              }, 20]}\n    ]\n  ]\n}\n"
            computation: "1"
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: ASC
    AssociatePricePlanResponse:
      value:
        accountId: G234DZZKBKACATFFGVGEMERFI
        accountName: ACME Enterprise - Account2
        pricingSchedules:
        - pricePlanId: um.1zYnCiM9Bpg.lv25y
          startDate: 2022-12-02T00:00:00Z
          endDate: 9999-01-01T00:00:00Z
    Account:
      summary: A sample Account
      value:
        id: G234DZZKBKACATFFGVGEMERFI
        name: ACME Enterprise - Account2
        invoiceCurrency: USD
        aliases:
        - alias: account2@acme.com
          status: ACTIVE
        - alias: +1234567890
          status: ACTIVE
        status: ACTIVE
    EventSchema:
      summary: A sample event schema
      value:
        name: ride_completed
        description: Cab ride completed
        version: 1
        status: DRAFT
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: ride_type
    EventSchemaVersionsResponse:
      summary: A sample event schema versions response
      value:
        data:
        - name: ride_completed
          description: Cab ride completed
          version: 1
          status: DRAFT
          attributes:
          - name: distance
          - name: time
          dimensions:
          - name: city
          - name: ride_type
    UsageMeter:
      value:
        id: 01BX5ZZKBKACTAV9WEVG
        name: Rides
        description: Cab rides
        type: COUNTER
        aggregation: COUNT
        status: DRAFT
        computations:
        - matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation: "1"
    PricePlan:
      value:
        id: um.1zYnCiM9Bpg.lv25y
        name: Rides - Pro plan
        status: DRAFT
        pricingSchedule:
        - startDate: 2022-01-04T00:00:00Z
          endDate: 2022-02-04T00:00:00Z
          pricePlanDetails:
            supportedCurrencies:
            - USD
            activeCurrencies:
            - USD
            pricingCycleConfig:
              interval: MONTHLY
              startOffset:
                dayOffset: "1"
                monthOffset: NIL
              gracePeriod: 3
            rateCards:
            - displayName: Local Rides
              pricingModel: TIERED
              rateConfig:
                usageMeterId: 01BX5ZZKBKACTAV9WEVG
                slabs:
                - rate: 100
                  priceType: PER_UNIT
                  startAfter: 0
                  order: 1
                - rate: 40
                  priceType: PER_UNIT
                  startAfter: 10
                  order: 2
                - rate: 10
                  priceType: PER_UNIT
                  startAfter: 50
                  order: 3
    PricePlanPaginatedResponse:
      value:
        data:
        - id: um.1zYnCiM9Bpg.lv25y
          name: Rides - Pro plan
          description: ""
          status: DRAFT
          usageMeters:
          - 01BX5ZZKBKACTAV9WEVG
          - 01BX55ZZdifACTAV9WEV
          pricePlanDetails:
            pricingCycleConfig:
              interval: MONTHLY
              startOffset:
                dayOffset: "4"
                monthOffset: NIL
              gracePeriod: 3
            rateCards:
            - displayName: Local Rides
              pricingModel: TIERED
              rateConfig:
                usageMeterId: 01BX5ZZKBKACTAV9WEVG
                slabs:
                - rate: 100
                  priceType: PER_UNIT
                  startAfter: 0
                  order: 1
                - rate: 40
                  priceType: PER_UNIT
                  startAfter: 10
                  order: 2
                - rate: 10
                  priceType: PER_UNIT
                  startAfter: 50
                  order: 3
          updatedAt: 2020-01-01T00:00:00Z
          createdAt: 2020-01-01T00:00:00Z
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
    RateCardUsage:
      value:
        type: USAGE
        usageMeters:
        - 01BX55ZZdifACTAV9WEV
        displayName: Local Rides
        pricingModel: TIERED
        rateConfig:
          usageMeterId: 01BX55ZZdifACTAV9WEV
          slabs:
          - rate: 100
            priceType: PER_UNIT
            startAfter: 0
            order: 1
          - rate: 40
            priceType: PER_UNIT
            startAfter: 10
            order: 2
          - rate: 10
            priceType: PER_UNIT
            startAfter: 50
            order: 3
    Setting:
      value:
        settingName: DEFAULT_CURRENCY
        settingValue: INR
        entityType: ORGANIZATION_ID
        entityId: XlK5h64gND
    OrganizationSetting:
      value:
        baseCurrency: INR
    IngestEventRequest:
      summary: example event ingestion request
      value:
        event:
          timestamp: 2022-06-15T07:30:35.123
          schemaName: travelCompletedEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          accountId: "1"
          attributes:
          - name: distanceTravelled
            value: 50
            unit: Miles
          - name: timeSpent
            value: 60
            unit: Minutes
          dimensions:
            location: Seattle
            costCenterCode: 1234
            travelType: Business
    IngestEventBatchRequest:
      summary: example batch event ingestion request
      value:
        events:
        - timestamp: 2022-06-15T07:30:35.123
          schemaName: travelCompletedEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          accountId: "1"
          attributes:
          - name: distanceTravelled
            value: 50
            unit: Miles
          - name: timeSpent
            value: 60
            unit: Minutes
          dimensions:
            location: Seattle
            costCenterCode: 1234
            travelType: Business
        - timestamp: 2022-06-15T07:30:35.123
          schemaName: sendMessageEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6c
          accountId: 1
          attributes:
          - name: messageSentCount
            value: 50
            unit: None
          - name: sizeOfMessage
            value: 60
            unit: KiloBytes
          dimensions:
            location: Seattle
            costCenterCode: 1234
            messageProviderName: Twilio
    GetEventResponse:
      summary: example get event response
      value:
        events:
        - eventPayload:
            timestamp: 2023-02-23T14:25:10Z
            schemaName: travelCompletedEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            accountId: "1"
            attributes:
            - name: distanceTravelled
              value: 50
              unit: Miles
            - name: timeSpent
              value: 60
              unit: Minutes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              travelType: Business
          eventPipelineInfo:
            eventSchema:
              name: Rides
              version: 1
            usageMeters:
            - id: 23bh55ZZdifACTAV9WEV
              name: rides_distance
              version: 1
              status: PROCESSED_UNITS_COMPUTED
              units: 10.42
            - id: 23bh55ZZdifACTAV9WEV
              name: rides_time
              version: 1
              status: PROCESSED_FILTERED_OUT
            pricePlans:
            - name: pro-plan
              id: 68551191-982b-4663-92fa-38a6f8313e91
              scheduleId: c0b1306d-f506-43a6-856b-69221efaee6b
              cycleStart: 04-03-2022
              cycleEnd: 04-04-2022
            account:
              id: acme-prod
            customer:
              id: acme_inc
          ingestionStatus:
            status: INGESTION_COMPLETED_EVENT_NOT_BILLED
            statusDescription: Event ingestion completed successfully but the event
              is not associated with any bill plan.
    GetEventsResponse:
      summary: example get batch event response
      value:
        events:
        - eventPayload:
            timestamp: 2023-02-23T14:25:10Z
            schemaName: travelCompletedEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            accountId: "1"
            attributes:
            - name: distanceTravelled
              value: 50
              unit: Miles
            - name: timeSpent
              value: 60
              unit: Minutes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              travelType: Business
          ingestionStatus:
            status: INGESTION_COMPLETED_EVENT_NOT_BILLED
            statusDescription: Event ingestion completed successfully but the event
              is not associated with any bill plan.
        - eventPayload:
            timestamp: 2023-02-23T14:25:10Z
            schemaName: sendMessageEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6c
            accountId: "1"
            attributes:
            - name: messageSentCount
              value: 50
              unit: None
            - name: sizeOfMessage
              value: 60
              unit: KiloBytes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              messageProviderName: Twilio
          ingestionStatus:
            status: INGESTION_COMPLETED
            statusDescription: Ingestion completed successfully
    GetMetricsResponse:
      summary: example get metrics response
      value:
        results:
        - id: m1
          name: EVENTS
          data:
            timestamps:
            - 2017-07-21T00:00:00Z
            - 2017-07-22T00:00:00Z
            metricValues:
            - 53
            - 32
        - id: m2
          name: USAGE
          data:
            timestamps:
            - 2017-07-01T00:00:00Z
            metricValues:
            - 123.45
  parameters:
    organization_id:
      content:
        application/json:
          schema:
            example: XlK5h64gND
            maxLength: 10
            pattern: "^[A-Z]{10}$"
            type: string
      explode: false
      in: path
      name: organization_id
      required: true
      style: simple
    customer_id:
      content:
        application/json:
          schema:
            example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
            maxLength: 50
            type: string
      explode: false
      in: path
      name: customer_id
      required: true
      style: simple
    account_id:
      content:
        application/json:
          schema:
            example: G234DZZKBKACATFFGVGEMERFH
            maxLength: 50
            type: string
      explode: false
      in: path
      name: account_id
      required: true
      style: simple
    event_schema_name:
      content:
        application/json:
          schema:
            example: rides
            maxLength: 50
            type: string
      explode: false
      in: path
      name: event_schema_name
      required: true
      style: simple
    usage_meter_id:
      content:
        application/json:
          schema:
            example: rides
            maxLength: 50
            type: string
      explode: false
      in: path
      name: usage_meter_id
      required: true
      style: simple
    next_token:
      explode: true
      in: query
      name: nextToken
      required: false
      schema:
        example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        type: string
      style: form
    page_size:
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        example: 10
        type: number
      style: form
    sort_order:
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      style: form
    price_plan_id:
      content:
        application/json:
          schema:
            example: um.1zYnCiM9Bpg.lv25y
            maxLength: 50
            type: string
      explode: false
      in: path
      name: price_plan_id
      required: true
      style: simple
    currency_id:
      content:
        application/json:
          schema:
            example: USD
            maxLength: 50
            type: string
      explode: false
      in: path
      name: currency_id
      required: true
      style: simple
    version_query:
      content:
        application/json:
          schema:
            example: 2
            format: int32
            type: integer
      description: Optional version to get a specific version. Gets latest version
        if it is not provided.
      explode: true
      in: query
      name: version
      required: false
      style: form
    settings_entity_type:
      explode: true
      in: query
      name: entity_type
      required: true
      schema:
        example: ACCOUNT_ID
        type: string
      style: form
    settings_entity_id:
      explode: true
      in: query
      name: entity_id
      required: true
      schema:
        example: acc_X1Df3sRf3
        type: string
      style: form
    settings_setting_name:
      explode: true
      in: query
      name: setting_name
      required: true
      schema:
        type: string
      style: form
    event_id:
      content:
        application/json:
          schema:
            example: f4a52f2d-b798-4e08-8b24-db0a5a468ba3
            maxLength: 50
            type: string
      explode: false
      in: path
      name: event_id
      required: true
      style: simple
    filter_next_page_token:
      description: Pagination token used as a marker to get records from next page.
      explode: true
      in: query
      name: nextToken
      required: false
      schema:
        example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        type: string
      style: form
    filter_status:
      description: Filter option to filter the events by processed/unprocessed status.
      examples:
        processed:
          value: PROCESSED
        in_progress:
          value: IN_PROGRESS
      explode: true
      in: query
      name: status
      required: false
      schema:
        type: string
      style: form
    filter_schema_name:
      description: Filter option to filter the events based on schema name.
      explode: true
      in: query
      name: schema_name
      required: false
      schema:
        example: Rides
        type: string
      style: form
    filter_account_id:
      description: Filter option to filter the events based on account id.
      explode: true
      in: query
      name: account_id
      required: false
      schema:
        example: "1234"
        type: string
      style: form
    filter_page_size:
      description: "Maximum page size expected by client to return the record list.\
        \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
        \ page size if no value is provided."
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        example: 10
        type: integer
      style: form
  requestBodies:
    SignupRequest:
      content:
        application/json:
          examples:
            SignupRequest:
              $ref: '#/components/examples/SignupRequest'
          schema:
            $ref: '#/components/schemas/SignupRequest'
      description: Payload to create organization
      required: false
    CreateCustomerRequest:
      content:
        application/json:
          examples:
            CreateCustomerRequest:
              $ref: '#/components/examples/CreateCustomerRequest'
          schema:
            $ref: '#/components/schemas/CreateCustomerRequest'
      description: Payload to create customer
      required: true
    UpdateCustomerRequest:
      content:
        application/json:
          examples:
            UpdateCustomerRequest:
              $ref: '#/components/examples/UpdateCustomerRequest'
          schema:
            $ref: '#/components/schemas/UpdateCustomerRequest'
      description: Payload to update customer
      required: true
    CreateAccountRequest:
      content:
        application/json:
          examples:
            CreateAccountRequest:
              $ref: '#/components/examples/CreateAccountRequest'
          schema:
            $ref: '#/components/schemas/CreateAccountRequest'
      description: Payload to create account
      required: true
    UpdateAccountRequest:
      content:
        application/json:
          examples:
            UpdateAccountRequest:
              $ref: '#/components/examples/UpdateAccountRequest'
          schema:
            $ref: '#/components/schemas/UpdateAccountRequest'
      description: Payload to update account
      required: true
    AddAccountAliasesRequest:
      content:
        application/json:
          examples:
            AddAccountAliasesRequest:
              $ref: '#/components/examples/AddAccountAliasesRequest'
          schema:
            $ref: '#/components/schemas/AddAccountAliasesRequest'
      description: Payload to add aliases to account
      required: true
    RemoveAccountAliasesRequest:
      content:
        application/json:
          examples:
            RemoveAccountAliasesRequest:
              $ref: '#/components/examples/RemoveAccountAliasesRequest'
          schema:
            $ref: '#/components/schemas/RemoveAccountAliasesRequest'
      description: Payload to remove aliases from account
      required: true
    CreateEventSchemaRequest:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/CreateEventSchemaRequest'
          schema:
            $ref: '#/components/schemas/CreateEventSchemaRequest'
      description: Payload to create event schema
      required: true
    UpdateEventSchemaRequest:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/UpdateEventSchemaRequest'
          schema:
            $ref: '#/components/schemas/UpdateEventSchemaRequest'
      description: Payload to update event schema
      required: true
    CreateUsageMeterRequest:
      content:
        application/json:
          examples:
            UsageMeter:
              $ref: '#/components/examples/CreateUsageMeterRequest'
          schema:
            $ref: '#/components/schemas/CreateUsageMeterRequest'
      description: Payload to create usage meter
      required: true
    UpdateUsageMeterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUsageMeterRequest'
      description: Payload to create usage meter
      required: true
    AssociatePricePlanRequest:
      content:
        application/json:
          examples:
            AssociatePricePlanRequest:
              $ref: '#/components/examples/AssociatePricePlanRequest'
          schema:
            $ref: '#/components/schemas/AssociatePricePlanRequest'
      description: Payload to associate a price plan to an account
      required: true
    CreatePricePlanRequest:
      content:
        application/json:
          examples:
            CreatePricePlanRequest:
              $ref: '#/components/examples/CreatePricePlanRequest'
          schema:
            $ref: '#/components/schemas/CreatePricePlanRequest'
      description: Payload to create price plan
      required: true
    UpdatePricePlanRequest:
      content:
        application/json:
          examples:
            UpdatePricePlanRequest:
              $ref: '#/components/examples/UpdatePricePlanRequest'
          schema:
            $ref: '#/components/schemas/UpdatePricePlanRequest'
      description: Payload to update price plan
      required: true
    UpsertSettingRequest:
      content:
        application/json:
          examples:
            UpdatePricePlanRequest:
              $ref: '#/components/examples/Setting'
          schema:
            $ref: '#/components/schemas/Setting'
      description: Payload to insert or update setting
      required: true
    ActivatePricePlanRequest:
      content:
        application/json:
          examples:
            ActivatePricePlanRequest:
              $ref: '#/components/examples/ActivatePricePlanRequest'
          schema:
            $ref: '#/components/schemas/ActivatePricePlanRequest'
      description: Payload to activate price plan
      required: true
    AddCurrencyToPricePlanRequest:
      content:
        application/json:
          examples:
            AddCurrencyToPricePlanRequest:
              $ref: '#/components/examples/AddCurrencyToPricePlanRequest'
          schema:
            $ref: '#/components/schemas/AddCurrencyToPricePlanRequest'
      description: Payload to add currency to price plan
      required: true
    UpdateOrganizationSettingRequest:
      content:
        application/json:
          examples:
            UpdateOrganizationSettingRequest:
              $ref: '#/components/examples/UpdateOrganizationSettingRequest'
          schema:
            $ref: '#/components/schemas/UpdateOrganizationSettingRequest'
      description: Payload to update organization setting
      required: true
    GetMetricsRequest:
      content:
        application/json:
          examples:
            GetMetricsRequest:
              value:
                startTime: 2017-07-21T00:00:00Z
                endTime: 2017-07-22T00:00:00Z
                metricQueries:
                - id: m1
                  name: EVENTS
                  aggregationPeriod: DAY
                  filters:
                  - fieldName: ACCOUNT_ID
                    fieldValues:
                    - account#1
                  - fieldName: CUSTOMER_ID
                    fieldValues:
                    - customer#1
                  - fieldName: EVENT_STATUS
                    fieldValues:
                    - PROCESSED
                - id: m2
                  name: USAGE
                  aggregationPeriod: MONTH
                  filters:
                  - fieldName: CUSTOMER_ID
                    fieldValues:
                    - customer#1
          schema:
            $ref: '#/components/schemas/GetMetricsRequest'
  responses:
    BaseSuccessResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseSuccessResponse'
      description: OK
    ErrorResponse:
      content:
        application/json:
          examples:
            ErrorResponse:
              summary: Error message
              value:
                message: <Reason message>
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Error response
    SignupResponse:
      content:
        application/json:
          examples:
            SignupResponse:
              summary: Signup response
              value:
                organizationId: XlK5h64gND
                jwtToken: <big huge token>
          schema:
            $ref: '#/components/schemas/SignupResponse'
      description: Signup API response
    CreateCustomerResponse:
      content:
        application/json:
          examples:
            CreateCustomerResponse:
              $ref: '#/components/examples/CreateCustomerResponse'
          schema:
            $ref: '#/components/schemas/CreateCustomerResponse'
      description: Response for Create customer request
    CustomerResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/Customer'
          schema:
            $ref: '#/components/schemas/Customer'
      description: Response for Get customer requests
    CustomerPaginatedResponse:
      content:
        application/json:
          examples:
            CustomerPaginatedResponse:
              $ref: '#/components/examples/CustomerPaginatedResponse'
          schema:
            $ref: '#/components/schemas/CustomerPaginatedResponse'
      description: Response for list customers request
    AccountPaginatedResponse:
      content:
        application/json:
          examples:
            AccountPaginatedResponse:
              $ref: '#/components/examples/AccountPaginatedResponse'
          schema:
            $ref: '#/components/schemas/AccountPaginatedResponse'
      description: Response for list customers request
    AccountResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/Account'
          schema:
            $ref: '#/components/schemas/Account'
      description: Response for Create and Get account requests
    EventSchemaResponse:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/EventSchema'
          schema:
            $ref: '#/components/schemas/EventSchema'
      description: Response for Create and Get event schema requests
    EventSchemaListPaginatedResponse:
      content:
        application/json:
          examples:
            EventSchemaPaginatedResponse:
              $ref: '#/components/examples/EventSchemaListPaginatedResponse'
          schema:
            $ref: '#/components/schemas/EventSchemaListPaginatedResponse'
      description: Response for list events request
    EventSchemaVersionsResponse:
      content:
        application/json:
          examples:
            EventSchemaVersionsResponse:
              $ref: '#/components/examples/EventSchemaVersionsResponse'
          schema:
            $ref: '#/components/schemas/EventSchemaVersionsResponse'
      description: Response for list event schema versions request
    UsageMeterResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/UsageMeter'
          schema:
            $ref: '#/components/schemas/UsageMeter'
      description: Response for Create and Get usage event requests
    UsageMeterPaginatedResponse:
      content:
        application/json:
          examples:
            UsageMeterPaginatedResponse:
              $ref: '#/components/examples/UsageMeterPaginatedResponse'
          schema:
            $ref: '#/components/schemas/UsageMeterPaginatedResponse'
      description: Response for list usage_meters request
    PricePlanResponse:
      content:
        application/json:
          examples:
            PricePlanResponse:
              $ref: '#/components/examples/PricePlan'
          schema:
            $ref: '#/components/schemas/PricePlan'
      description: Response for Create and Get price plan requests
    PricePlanPaginatedResponse:
      content:
        application/json:
          examples:
            PricePlanPaginatedResponse:
              $ref: '#/components/examples/PricePlanPaginatedResponse'
          schema:
            $ref: '#/components/schemas/PricePlanPaginatedResponse'
      description: Response for list price plans request
    AssociatePricePlanResponse:
      content:
        application/json:
          examples:
            AssociatePricePlanResponse:
              $ref: '#/components/examples/AssociatePricePlanResponse'
          schema:
            $ref: '#/components/schemas/AssociatePricePlanResponse'
      description: Response for associate price plan request
    SettingResponse:
      content:
        application/json:
          examples:
            AssociatePricePlanResponse:
              $ref: '#/components/examples/Setting'
          schema:
            $ref: '#/components/schemas/Setting'
      description: Response for upsert settings request
    OrganizationSettingResponse:
      content:
        application/json:
          examples:
            AssociatePricePlanResponse:
              $ref: '#/components/examples/OrganizationSetting'
          schema:
            $ref: '#/components/schemas/OrganizationSetting'
      description: Response for update organization settings request
    GetMetricsResponse:
      content:
        application/json:
          examples:
            ErrorResponse:
              summary: Error message
              value:
                message: <Reason message>
          schema:
            $ref: '#/components/schemas/GetMetricsResponse'
      description: Get Metrics response
  schemas:
    SignupRequest:
      additionalProperties: false
      description: Payload to signup
      properties:
        name:
          maxLength: 50
          type: string
        description:
          maxLength: 500
          type: string
        userDetails:
          $ref: '#/components/schemas/UserDetails'
      required:
      - name
      - userDetails
      type: object
    UserDetails:
      additionalProperties: false
      description: Root user details for the organization
      properties:
        preferredUsername:
          maxLength: 50
          pattern: "^[A-Za-z0-9]{3,50}$"
          type: string
        name:
          maxLength: 50
          type: string
        password:
          maxLength: 100
          type: string
        email:
          maxLength: 100
          type: string
        phone:
          maxLength: 30
          type: string
      required:
      - email
      - name
      - password
      type: object
    CreateCustomerRequest:
      additionalProperties: false
      description: Payload to create customer
      example:
        name: ACME Enterprise
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        billingAddress: "201 Boulevard, WA 53123"
        primaryEmail: admin@example.com
        account:
          aliases: acme_primary
          name: Primary Account
          id: ACC00001
          invoiceCurrency: invoiceCurrency
      properties:
        id:
          description: Customer identifier
          example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          example: ACME Enterprise
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          example: admin@example.com
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          example: "201 Boulevard, WA 53123"
          maxLength: 1000
          type: string
        account:
          $ref: '#/components/schemas/CreateAccountRequest'
      required:
      - billingAddress
      - id
      - name
      - primaryEmail
      type: object
    UpdateCustomerRequest:
      additionalProperties: false
      description: Payload to update customer
      example:
        name: ACME Enterprise
        billingAddress: 201 Bleeker Street
        primaryEmail: admin@example.com
      properties:
        name:
          description: Name of the customer
          example: ACME Enterprise
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          example: admin@example.com
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          example: 201 Bleeker Street
          maxLength: 1000
          type: string
      type: object
    CreateAccountRequest:
      additionalProperties: false
      description: Payload to create account
      example:
        aliases: acme_primary
        name: Primary Account
        id: ACC00001
        invoiceCurrency: invoiceCurrency
      properties:
        id:
          description: Identifier of the account
          example: ACC00001
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          example: Primary Account
          maxLength: 255
          minLength: 3
          type: string
        invoiceCurrency:
          description: "[ISO_4217](https://en.wikipedia.org/wiki/ISO_4217) code of\
            \ the currency in which the account must be invoiced\nDefaults to Base\
            \ currency.\n"
          maxLength: 3
          minLength: 3
          type: string
        aliases:
          description: Aliases are tags that are associated with an account. Multiple
            aliases are allowed for a single account.
          example: acme_primary
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 0
          type: array
      required:
      - id
      - name
      type: object
    UpdateAccountRequest:
      additionalProperties: false
      description: Payload to update account
      example:
        name: name
      properties:
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
      type: object
    AddAccountAliasesRequest:
      additionalProperties: false
      description: Payload to add aliases from account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
      properties:
        aliases:
          description: List of aliases to add
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 1
          type: array
      type: object
    RemoveAccountAliasesRequest:
      additionalProperties: false
      description: Payload to remove aliases from account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
      properties:
        aliases:
          description: List of aliases to remove
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 1
          type: array
      type: object
    CreateEventSchemaRequest:
      additionalProperties: false
      description: Request to create event schema
      example:
        name: name
        description: description
        attributes:
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
      required:
      - attributes
      - dimensions
      - name
      type: object
    UpdateEventSchemaRequest:
      additionalProperties: false
      description: Request to update event schema
      example:
        description: description
        attributes:
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
      properties:
        description:
          description: Description of the event
          maxLength: 255
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
      required:
      - attributes
      - dimensions
      type: object
    CreateUsageMeterRequest:
      additionalProperties: false
      description: Request to create usage meter
      example:
        computations:
        - id: id
          matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        - id: id
          matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        name: name
        description: description
        aggregation: DRAFT
        type: COUNTER
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        type:
          description: Type of usage meter
          enum:
          - COUNTER
          example: COUNTER
          type: string
        aggregation:
          description: Aggregation to be applied on usage meter result
          enum:
          - COUNT
          - SUM
          example: DRAFT
          type: string
        computations:
          items:
            $ref: '#/components/schemas/Computation'
          type: array
      required:
      - aggregation
      - name
      - type
      type: object
    UpdateUsageMeterRequest:
      additionalProperties: false
      description: Request to update usage meter
      example:
        computations:
        - id: id
          matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        - id: id
          matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        description: description
        aggregation: COUNT
        type: COUNTER
      properties:
        description:
          description: Description of the event
          maxLength: 255
          type: string
        type:
          description: "Type of usage meter\n* COUNTER - Count usage \n"
          enum:
          - COUNTER
          example: COUNTER
          type: string
        aggregation:
          description: |
            Aggregation to be applied on usage meter result
            * COUNT - Counts number of events matching the usage meter
            * SUM - Sums up results of computation of all events matching usage meter
          enum:
          - COUNT
          - SUM
          example: COUNT
          type: string
        computations:
          items:
            $ref: '#/components/schemas/Computation'
          type: array
      required:
      - aggregation
      - type
      type: object
    CreatePricePlanRequest:
      additionalProperties: false
      description: Request to create a price plan
      example:
        pricePlanDetails:
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
        name: name
        description: description
      properties:
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        pricePlanDetails:
          $ref: '#/components/schemas/CreatePricePlanDetails'
      required:
      - name
      - pricePlanDetails
      type: object
    CreatePricePlanDetails:
      additionalProperties: false
      example:
        pricingCycleConfig:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          interval: MONTHLY
        usageRateCards:
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: 01BX5ZZKBKACTAV9WEVG
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: 01BX5ZZKBKACTAV9WEVG
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
      properties:
        pricingCycleConfig:
          $ref: '#/components/schemas/PricingCycleConfig'
        usageRateCards:
          description: List of usage rate cards
          items:
            $ref: '#/components/schemas/UsageRateCard'
          type: array
      required:
      - pricingCycleConfig
      - usageRateCards
      type: object
    UpdatePricePlanRequest:
      additionalProperties: false
      description: Request to update a price plan
      example:
        pricePlanDetails:
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
        description: description
      properties:
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        pricePlanDetails:
          $ref: '#/components/schemas/PricePlanDetailsOverride'
      type: object
    ActivatePricePlanRequest:
      additionalProperties: false
      description: Request to activate currencies of a price plan
      example:
        currencies:
        - currencies
        - currencies
      properties:
        currencies:
          description: List of currencies to activate
          items:
            minLength: 1
            type: string
          type: array
          uniqueItems: true
      required:
      - currencies
      type: object
    AssociatePricePlanRequest:
      additionalProperties: false
      description: Request to associate a price plan to an account
      example:
        effectiveUntil: 2000-01-23
        pricePlanId: pricePlanId
        effectiveFrom: 2000-01-23
        pricePlanDetailsOverride:
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
      properties:
        pricePlanId:
          description: Id of the price plan
          type: string
        effectiveFrom:
          description: |
            Date of effectiveness of the association.
            - Expected only if the account already has a price plan associated with it.
          format: date
          type: string
        effectiveUntil:
          description: |
            Date until which the association must be effective.
            - Expected only if effectiveFrom is present.
          format: date
          type: string
        pricePlanDetailsOverride:
          $ref: '#/components/schemas/PricePlanDetailsOverride'
      required:
      - effectiveFrom
      - effectiveUntil
      - pricePlanId
      type: object
    AddCurrencyToPricePlanRequest:
      additionalProperties: false
      description: Request to adding currency to a price plan
      example:
        currency: currency
        usageRates:
        - usageMeterId: 01BX5ZZKBKACTAV9WEVG
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
        - usageMeterId: 01BX5ZZKBKACTAV9WEVG
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
      properties:
        currency:
          description: Currency to be added
          type: string
        usageRates:
          description: List of usage rates
          items:
            $ref: '#/components/schemas/UsageRate'
          type: array
      required:
      - currency
      - usageRates
      type: object
    BaseSuccessResponse:
      additionalProperties: false
      example:
        success: true
      properties:
        success:
          example: true
          type: boolean
      required:
      - success
      type: object
    ErrorResponse:
      additionalProperties: false
      properties:
        message:
          description: error description
          maxLength: 500
          type: string
      required:
      - message
      type: object
    SignupResponse:
      additionalProperties: false
      description: Signup response
      properties:
        organizationId:
          description: Organization Identifier
          maxLength: 10
          type: string
        jwtToken:
          description: Token which can be used for authentication
          type: string
      required:
      - jwtToken
      - organizationId
      type: object
    CreateCustomerResponse:
      additionalProperties: false
      example:
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        account:
          aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          invoiceCurrency: USD
          status: ACTIVE
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          type: string
        account:
          $ref: '#/components/schemas/Account'
      required:
      - billingAddress
      - id
      - name
      - primaryEmail
      type: object
    CustomerPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          billingAddress: billingAddress
          primaryEmail: primaryEmail
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          billingAddress: billingAddress
          primaryEmail: primaryEmail
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    AccountPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          invoiceCurrency: USD
          status: ACTIVE
        - aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          invoiceCurrency: USD
          status: ACTIVE
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    EventSchemaListPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - null
        - null
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchemaListData'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    UsageMeterPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          computations:
          - id: id
            matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"\
              }, \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\"\
              : \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
              }, 20]}\n    ]\n  ]\n}\n"
            computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          name: rides-usage
          description: Meter to track cab rides
          aggregation: COUNT
          id: id
          type: COUNTER
          lastActivatedAt: 2000-01-23T04:56:07.000+00:00
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          computations:
          - id: id
            matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"\
              }, \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\"\
              : \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
              }, 20]}\n    ]\n  ]\n}\n"
            computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          name: rides-usage
          description: Meter to track cab rides
          aggregation: COUNT
          id: id
          type: COUNTER
          lastActivatedAt: 2000-01-23T04:56:07.000+00:00
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsageMeter'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    PricePlanListData:
      additionalProperties: false
      description: Data of price plan list
      example:
        usageMeters:
        - usageMeters
        - usageMeters
        createdAt: 2000-01-23T04:56:07.000+00:00
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          activeCurrencies:
          - activeCurrencies
          - activeCurrencies
        name: name
        description: description
        id: id
        status: DRAFT
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of price plan
          maxLength: 50
          type: string
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        status:
          description: Status of Price plan
          enum:
          - DRAFT
          - ACTIVE
          - ARCHIVED
          type: string
        usageMeters:
          description: Usage meters id linked to the price plan
          items:
            type: string
          type: array
        pricePlanDetails:
          $ref: '#/components/schemas/PricePlanDetails'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - name
      - pricePlanDetails
      - status
      - updatedAt
      - usageMeters
      type: object
    PricePlanPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - usageMeters:
          - usageMeters
          - usageMeters
          createdAt: 2000-01-23T04:56:07.000+00:00
          pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          name: name
          description: description
          id: id
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - usageMeters:
          - usageMeters
          - usageMeters
          createdAt: 2000-01-23T04:56:07.000+00:00
          pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          name: name
          description: description
          id: id
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PricePlanListData'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      required:
      - data
      type: object
    AssociatePricePlanResponse:
      additionalProperties: false
      example:
        accountId: accountId
        pricingSchedules:
        - endDate: 2000-01-23T04:56:07.000+00:00
          pricePlanName: pricePlanName
          pricePlanId: pricePlanId
          pricePlanDetailsOverride:
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          pricePlanName: pricePlanName
          pricePlanId: pricePlanId
          pricePlanDetailsOverride:
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
          startDate: 2000-01-23T04:56:07.000+00:00
        accountName: accountName
      properties:
        accountId:
          description: Identifier of the account
          maxLength: 50
          type: string
        accountName:
          description: Name of the customer
          type: string
        pricingSchedules:
          items:
            $ref: '#/components/schemas/PlanOverride'
          type: array
      required:
      - accountId
      - accountName
      - pricingSchedules
      type: object
    UpdateOrganizationSettingRequest:
      additionalProperties: false
      properties:
        baseCurrency:
          description: Base currency of the organization
          type: string
      required:
      - baseCurrency
      type: object
    OrganizationSetting:
      additionalProperties: false
      properties:
        baseCurrency:
          description: Base currency of the organization
          type: string
      type: object
    Customer:
      additionalProperties: false
      description: Structure of customer
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        status: ACTIVE
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          type: string
        status:
          description: Status of the customer
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - billingAddress
      - createdAt
      - id
      - name
      - primaryEmail
      - status
      - updatedAt
      type: object
    Account:
      additionalProperties: false
      description: Structure of an account
      example:
        aliases:
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        name: name
        id: id
        invoiceCurrency: USD
        status: ACTIVE
      properties:
        id:
          description: Identifier of the account
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        invoiceCurrency:
          description: "[ISO_4217](https://en.wikipedia.org/wiki/ISO_4217) code of\
            \ the currency in which the account must be invoiced\nDefaults to Base\
            \ currency.\n"
          example: USD
          maxLength: 3
          minLength: 3
          type: string
        aliases:
          description: list of aliases of the account
          items:
            $ref: '#/components/schemas/AccountAliases'
          maxItems: 10
          minItems: 0
          type: array
        status:
          description: Status of the account
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
      required:
      - id
      - invoiceCurrency
      - name
      - status
      type: object
    EventSchemaVersionsResponse:
      additionalProperties: false
      description: Response for event schema versions
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          attributes:
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          version: 1
          status: DRAFT
          dimensions:
          - name: city
          - name: city
          - name: city
          - name: city
          - name: city
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          attributes:
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          version: 1
          status: DRAFT
          dimensions:
          - name: city
          - name: city
          - name: city
          - name: city
          - name: city
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchema'
          type: array
      required:
      - data
      type: object
    EventSchemaListData:
      allOf:
      - $ref: '#/components/schemas/EventSchema'
      - $ref: '#/components/schemas/EventSchemaListData_allOf'
    EventSchema:
      additionalProperties: false
      description: Structure of an event schema
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        attributes:
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        version: 1
        status: DRAFT
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        version:
          description: Version of event schema
          example: 1
          format: int32
          minimum: 1
          type: integer
        status:
          description: "Status of event schema\n* DRAFT - Schema is in draft state\
            \ \n* ACTIVE - Schema is currently active \n* INACTIVE - Schema is currently\
            \ inactive\n* ARCHIVED - Older version of event schema\n"
          enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - ARCHIVED
          example: DRAFT
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
          uniqueItems: true
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
          uniqueItems: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - attributes
      - name
      - version
      type: object
    EventAttributeSchema:
      additionalProperties: false
      description: Structure of an event attribute
      example:
        defaultUnit: kms
        name: distance
      properties:
        name:
          description: Name of the event attribute.
          example: distance
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        defaultUnit:
          description: Unit for the attribute
          example: kms
          maxLength: 10
          type: string
      required:
      - name
      type: object
    DimensionsSchema:
      additionalProperties: false
      description: Structure of dimensions
      example:
        name: city
      properties:
        name:
          description: Name of the event dimension
          example: city
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
      required:
      - name
      type: object
    UsageMeter:
      additionalProperties: false
      description: Structure of usage meter
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        computations:
        - id: id
          matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        name: rides-usage
        description: Meter to track cab rides
        aggregation: COUNT
        id: id
        type: COUNTER
        lastActivatedAt: 2000-01-23T04:56:07.000+00:00
        status: DRAFT
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of the usage meter
          maxLength: 20
          type: string
        name:
          description: Name of the usage meter
          example: rides-usage
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          example: Meter to track cab rides
          maxLength: 255
          type: string
        type:
          description: Type of usage meter
          enum:
          - COUNTER
          example: COUNTER
          type: string
        status:
          description: Status of usage meter
          enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - ARCHIVED
          example: DRAFT
          type: string
        aggregation:
          description: Aggregation to be applied on usage meter result
          enum:
          - COUNT
          - SUM
          example: COUNT
          type: string
        computations:
          items:
            $ref: '#/components/schemas/Computation'
          maxItems: 1
          minItems: 0
          type: array
        createdAt:
          format: date-time
          type: string
        lastActivatedAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - aggregation
      - id
      - name
      - type
      type: object
    Computation:
      example:
        id: id
        matcher: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"}, \"\
          chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\": \"attribute.distance\"\
          }, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"}, 20]}\n    ]\n\
          \  ]\n}\n"
        computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
      properties:
        id:
          description: Optional identifier describing the matcher and computation
            pair
          maxLength: 50
          type: string
        matcher:
          description: |
            Condition to be applied on event. Upon matching it the corresponding computation will be considered for usage_meter unit calculation. The result of the matcher needs to be truthy (https://jsonlogic.com/truthy.html) in order to be considered as a match.
          example: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          maxLength: 1500
          type: string
        computation:
          description: "Computation to be applied on an event if it matches the matcher\
            \ In case of a COUNT aggregation type, computation should be passed as\
            \ '1'\n"
          example: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          maxLength: 500
          type: string
      required:
      - computation
      type: object
    PaginationOptions:
      additionalProperties: false
      example:
        sortOrder: ASC
        pageSize: 0
      properties:
        pageSize:
          type: integer
        sortOrder:
          enum:
          - ASC
          - DESC
          type: string
      type: object
    PlanOverride:
      additionalProperties: false
      description: "Represents effectiveness period and config of a price plan. i.e,\
        \ price plan bound by time."
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        pricePlanName: pricePlanName
        pricePlanId: pricePlanId
        pricePlanDetailsOverride:
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        pricePlanId:
          type: string
        pricePlanName:
          type: string
        pricePlanDetailsOverride:
          $ref: '#/components/schemas/PricePlanDetailsOverride'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
      - endDate
      - pricePlanId
      - pricePlanName
      - startDate
      type: object
    Setting:
      additionalProperties: false
      description: Represents user_setting
      properties:
        settingName:
          type: string
        settingValue:
          type: string
        entityType:
          type: string
        entityId:
          type: string
      required:
      - entityId
      - entityType
      - settingName
      - settingValue
      type: object
    PricePlan:
      additionalProperties: false
      description: Price plan entity
      example:
        pricingSchedule:
        - pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        - pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: 01BX5ZZKBKACTAV9WEVG
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 2
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: id
        status: DRAFT
      properties:
        id:
          description: Price plan id
          type: string
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        status:
          description: Status of Price plan
          enum:
          - DRAFT
          - ACTIVE
          - ARCHIVED
          type: string
        pricingSchedule:
          items:
            $ref: '#/components/schemas/PricingSchedule'
          type: array
      required:
      - id
      - name
      - pricingSchedule
      - status
      type: object
    PricePlanDetails:
      example:
        supportedCurrencies:
        - supportedCurrencies
        - supportedCurrencies
        pricingCycleConfig:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          interval: MONTHLY
        usageRateCards:
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: 01BX5ZZKBKACTAV9WEVG
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: 01BX5ZZKBKACTAV9WEVG
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
        activeCurrencies:
        - activeCurrencies
        - activeCurrencies
      properties:
        supportedCurrencies:
          items:
            type: string
          type: array
          uniqueItems: true
        activeCurrencies:
          items:
            type: string
          type: array
          uniqueItems: true
        pricingCycleConfig:
          $ref: '#/components/schemas/PricingCycleConfig'
        usageRateCards:
          items:
            $ref: '#/components/schemas/UsageRateCard'
          minItems: 1
          type: array
      required:
      - activeCurrencies
      - pricingCycleConfig
      - supportedCurrencies
      - usageRateCards
      type: object
    PricePlanDetailsOverride:
      example:
        pricingCycleConfig:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          interval: MONTHLY
        usageRateCards:
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: 01BX5ZZKBKACTAV9WEVG
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: 01BX5ZZKBKACTAV9WEVG
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 2
      properties:
        pricingCycleConfig:
          $ref: '#/components/schemas/PricingCycleConfig'
        usageRateCards:
          items:
            $ref: '#/components/schemas/UsageRateCard'
          minItems: 1
          type: array
      type: object
    PriceType:
      enum:
      - FLAT
      - PER_UNIT
      - PACKAGE
      type: string
    PricingCycleConfig:
      description: Represents configurations related to pricing cycle
      example:
        gracePeriod: 3
        startOffset:
          dayOffset: dayOffset
          monthOffset: monthOffset
        interval: MONTHLY
      properties:
        interval:
          description: Interval field allow you to define the billing interval you
            would like to set
          enum:
          - MONTHLY
          - QUARTERLY
          - HALF_YEARLY
          - ANNUALLY
          type: string
        startOffset:
          $ref: '#/components/schemas/PricingCycleConfig_startOffset'
        gracePeriod:
          description: "Togai allows you to ingest past dated events that will be\
            \ processed by a pricing cycle till the end grace period. \nFor example:\
            \ Pricing cycle is Monthly from 1st to 30th and gracePeriod is 5 days\
            \ which next month 1 to 5th date, you can ingest past dated events during\
            \ this grace period.\n"
          example: 3
          format: int32
          type: integer
      required:
      - gracePeriod
      - interval
      - startOffset
      type: object
    PricingModel:
      description: "Togai supports two type of pricing model Tiered and Volume. Tiered\
        \ pricing model applies respective slab and its rate to the usage value while\
        \ volume pricing model applies the latest matching slab of the usage value\
        \ and applies respective rate. \nFor more understanding read [Rate Cards](https://docs.togai.com/docs/priceplan#setting-up-multiple-rate-cards)\n"
      enum:
      - TIERED
      - VOLUME
      type: string
    PricingSchedule:
      additionalProperties: false
      description: "Represents effectiveness period and config of a price plan. i.e,\
        \ price plan bound by time."
      example:
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: 01BX5ZZKBKACTAV9WEVG
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 2
          activeCurrencies:
          - activeCurrencies
          - activeCurrencies
        endDate: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        pricePlanDetails:
          $ref: '#/components/schemas/PricePlanDetails'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
      - endDate
      - startDate
      type: object
    RatePlan:
      description: Contains all rate related configurations
      example:
        pricingModel: null
        slabs:
        - startAfter: 6.027456183070403
          priceType: null
          slabConfig:
            key: slabConfig
          order: 1
        - startAfter: 6.027456183070403
          priceType: null
          slabConfig:
            key: slabConfig
          order: 1
      properties:
        pricingModel:
          $ref: '#/components/schemas/PricingModel'
        slabs:
          description: Rate cards can have single or multiple slab up to 100.
          items:
            $ref: '#/components/schemas/Slab'
          minItems: 1
          type: array
      required:
      - pricingModel
      - slabs
      type: object
    RateValue:
      description: Represents a rate
      example:
        currency: currency
        slabRates:
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 2
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 2
      properties:
        currency:
          type: string
        slabRates:
          items:
            $ref: '#/components/schemas/SlabRate'
          minItems: 1
          type: array
      required:
      - currency
      - slabRates
      type: object
    Slab:
      description: Represents a pricing priceType (rates + slabs) for usage price
        plan
      example:
        startAfter: 6.027456183070403
        priceType: null
        slabConfig:
          key: slabConfig
        order: 1
      properties:
        order:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        startAfter:
          type: number
        priceType:
          $ref: '#/components/schemas/PriceType'
        slabConfig:
          additionalProperties:
            type: string
          type: object
      required:
      - order
      - priceType
      - startAfter
      type: object
    SlabRate:
      description: Represents a rate for a slab
      example:
        rate: 5.962133916683182
        slabRateConfig:
          key: slabRateConfig
        order: 2
      properties:
        order:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        rate:
          type: number
        slabRateConfig:
          additionalProperties:
            type: string
          type: object
      required:
      - order
      - rate
      type: object
    UsageRateCard:
      example:
        ratePlan:
          pricingModel: null
          slabs:
          - startAfter: 6.027456183070403
            priceType: null
            slabConfig:
              key: slabConfig
            order: 1
          - startAfter: 6.027456183070403
            priceType: null
            slabConfig:
              key: slabConfig
            order: 1
        displayName: displayName
        usageMeterId: 01BX5ZZKBKACTAV9WEVG
        rateValues:
        - currency: currency
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
        - currency: currency
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 2
      properties:
        displayName:
          description: "Name your rate card, this will be displayed in the Togai App"
          type: string
        usageMeterId:
          description: The usage meter will be associated with the rate card to transform
            the usage value to billable value
          example: 01BX5ZZKBKACTAV9WEVG
          type: string
        ratePlan:
          $ref: '#/components/schemas/RatePlan'
        rateValues:
          items:
            $ref: '#/components/schemas/RateValue'
          type: array
      required:
      - ratePlan
      - rateValues
      - usageMeterId
      type: object
    IngestEventRequest:
      additionalProperties: false
      description: Payload for ingesting events
      example:
        event:
          accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
      properties:
        event:
          $ref: '#/components/schemas/Event'
      type: object
    IngestBatchEventRequest:
      additionalProperties: false
      description: Payload for ingesting batch events
      example:
        events:
        - accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
      properties:
        events:
          items:
            $ref: '#/components/schemas/Event'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - events
      type: object
    Event:
      additionalProperties: false
      description: Contents of the event
      example:
        accountId: "1"
        attributes:
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        id: c0b1306d-f506-43a6-856b-69221efaee6b
        schemaName: schemaName
        timestamp: 2000-01-23T04:56:07.000+00:00
        dimensions:
          key: "{\"Country\":\"India\"}"
      properties:
        schemaName:
          description: "Name of the Event Schema. \nKnow more about [event schema](https://docs.togai.com/docs/event-schemas)\n"
          maxLength: 50
          type: string
        id:
          description: "A unique value to identify the event instance. This unique\
            \ value should be generated by the client and it acts as the **idempotency\
            \ key**. Togai server will use this key to recognize subsequent retries\
            \ of the same request and avoid metering multiple times for that same\
            \ request. This id can be created in any format but we recommend using\
            \ UUIDv4 to reduce collision occurance. \n\n NOTE1: Expiry time for idempotency\
            \ validation will be until the end of the billing cycle. Any request which\
            \ comes after the billing cycle with the same id will be treated as new\
            \ request and ingested for metering.\n\n NOTE2: If the billing cycle is\
            \ not configured for the idempotency validation will be until **10 days**\
            \ of the event ingestion."
          example: c0b1306d-f506-43a6-856b-69221efaee6b
          maxLength: 512
          type: string
        timestamp:
          description: Source time stamp of the event. This timestamp must be in ISO
            8601 format.
          format: date-time
          type: string
        accountId:
          description: The event will be associated with the provided account
          example: "1"
          maxLength: 50
          type: string
        attributes:
          description: Attributes are numeric values. It can be usage metric which
            you push to Togai
          items:
            $ref: '#/components/schemas/Attribute'
          maxItems: 10
          type: array
        dimensions:
          additionalProperties:
            example: "{\"Country\":\"India\"}"
            type: string
          description: "Dimensions are tags/labels associated with the events. This\
            \ dimensions can be used to configure billing, for queries, analytics\
            \ and reports."
          type: object
      required:
      - accountId
      - attributes
      - dimensions
      - id
      - schemaName
      - timestamp
      type: object
    Attribute:
      additionalProperties: false
      description: Metric to be recorded
      example:
        unit: characters
        name: message
        value: "100"
      properties:
        name:
          description: Name of the event attribute
          example: message
          maxLength: 50
          type: string
        value:
          description: Value of the event attribute
          example: "100"
          maxLength: 50
          type: string
        unit:
          description: "Unit with which the attribute value was measured. Natively\
            \ supported units - \"Meters, Miles, Kilometers, Grams, Kilograms, ounces,\
            \ Pounds, Minutes, Hours, Seconds, Milliseconds, Microseconds, None\"\
            . Clients are free to add any other custom units."
          example: characters
          maxLength: 50
          type: string
      required:
      - name
      - value
      type: object
    Dimensions:
      additionalProperties:
        example: "{\"Country\":\"India\"}"
        type: string
      description: "Dimensions are tags/labels associated with the events. This dimensions\
        \ can be used to configure billing, for queries, analytics and reports."
      type: object
    IngestError:
      additionalProperties: false
      description: ""
      example:
        eventPayload:
          accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        message: message
      properties:
        message:
          type: string
        eventPayload:
          $ref: '#/components/schemas/Event'
      type: object
    IngestEventResponse:
      additionalProperties: false
      properties:
        ingestionRequestId:
          description: "On successful ingestion acceptance request, ingestion request\
            \ id will be returned. This ingestion id can be used by clients to query\
            \ the status of ingestion (IN_PROGRESS, COMPLETED)."
          maxLength: 500
          type: string
      required:
      - ingestionRequestId
      type: object
    IngestBatchEventResponse:
      additionalProperties: false
      example:
        errors:
        - eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          message: message
        - eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          message: message
        - eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          message: message
        - eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          message: message
        - eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/IngestError'
          maxItems: 100
          type: array
      required:
      - errors
      type: object
    StatusResponse:
      properties:
        greeting:
          type: string
        date:
          type: string
        url:
          type: string
        headers:
          $ref: '#/components/schemas/StatusResponse_headers'
      title: StatusResponse
      type: object
    GetEventResponse:
      additionalProperties: false
      description: Get single event response
      example:
        events:
        - null
        - null
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventWithStatusAndEventPipelineInfo'
          type: array
      required:
      - events
      type: object
    GetEventsResponse:
      additionalProperties: false
      description: Get batch events response
      example:
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        events:
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: "1"
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventWithStatus'
          maxItems: 50
          minItems: 1
          type: array
        nextToken:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          maxLength: 500
          type: string
      required:
      - events
      type: object
    EventWithStatus:
      additionalProperties: false
      description: Raw usage event ingested by the business team and the status of
        the event ingestion.
      example:
        ingestionStatus:
          statusDescription: Ingestion Completed successfully
          status: INGESTION_COMPLETED
        eventPayload:
          accountId: "1"
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
      properties:
        eventPayload:
          $ref: '#/components/schemas/Event'
        ingestionStatus:
          $ref: '#/components/schemas/IngestionStatus'
      required:
      - eventPayload
      - ingestionStatus
      type: object
    EventWithStatusAndEventPipelineInfo:
      allOf:
      - $ref: '#/components/schemas/EventWithStatus'
      - $ref: '#/components/schemas/EventWithStatusAndEventPipelineInfo_allOf'
    IngestionStatus:
      additionalProperties: false
      description: Status about the event ingestion.
      example:
        statusDescription: Ingestion Completed successfully
        status: INGESTION_COMPLETED
      properties:
        status:
          description: Ingestion status
          enum:
          - INGESTION_IN_PROGRESS
          - INGESTION_FAILED
          - INGESTION_FAILED_SCHEMA_NOT_DEFINED
          - INGESTION_FAILED_UNITS_INVALID
          - INGESTION_FAILED_EVENT_INVALID
          - INGESTION_COMPLETED_NO_MATCHING_METERS
          - INGESTION_COMPLETED_EVENT_METERED
          - INGESTION_COMPLETED_EVENT_NOT_METERED
          - UNKNOWN
          example: INGESTION_COMPLETED
          type: string
        statusDescription:
          example: Ingestion Completed successfully
          maxLength: 250
          type: string
      required:
      - status
      type: object
    EventPipelineInfo:
      additionalProperties: false
      description: Information related to ingestion of an event
      properties:
        eventSchema:
          $ref: '#/components/schemas/EventPipelineInfo_eventSchema'
        usageMeters:
          items:
            $ref: '#/components/schemas/EventPipelineInfo_usageMeters_inner'
          type: array
        pricePlans:
          items:
            $ref: '#/components/schemas/EventPipelineInfo_pricePlans_inner'
          type: array
        account:
          $ref: '#/components/schemas/EventPipelineInfoAccount'
        customer:
          $ref: '#/components/schemas/EventPipelineInfoCustomer'
      type: object
    GetMetricsRequest:
      additionalProperties: false
      description: Request to get metrics from togai
      example:
        metricQueries:
        - configs:
            key: configs
          name: null
          id: id
          groupBy: groupBy
          filters:
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          aggregationPeriod: DAY
        - configs:
            key: configs
          name: null
          id: id
          groupBy: groupBy
          filters:
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          aggregationPeriod: DAY
        startTime: 2017-07-21T00:00:00Z
        endTime: 2017-07-21T00:00:00Z
      properties:
        startTime:
          example: 2017-07-21T00:00:00Z
          format: date-time
          type: string
        endTime:
          example: 2017-07-21T00:00:00Z
          format: date-time
          type: string
        metricQueries:
          items:
            $ref: '#/components/schemas/MetricQuery'
          type: array
          uniqueItems: true
      required:
      - endTime
      - metricQueries
      - startTime
      type: object
    MetricName:
      description: "Define the metric you would like to get - allowed options are\n\
        EVENTS - Aggregation of raw events,\nUSAGE - Aggregated usage value from Usage\
        \ meters,\nREVENUE - Aggregated of revenue value from Pricing Plans\n"
      enum:
      - EVENTS
      - USAGE
      - REVENUE
      type: string
    MetricQuery:
      additionalProperties: false
      description: Object representing a single metrics query
      example:
        configs:
          key: configs
        name: null
        id: id
        groupBy: groupBy
        filters:
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        aggregationPeriod: DAY
      properties:
        id:
          description: "Mandatory  for all request. \nUser defined ID for identifying\
            \ the request for your internal reference\n"
          type: string
        name:
          $ref: '#/components/schemas/MetricName'
        aggregationPeriod:
          description: "Set the aggregation period. Allowed periods are DAY, WEEK,\
            \ MONTH"
          enum:
          - DAY
          - WEEK
          - MONTH
          type: string
        groupBy:
          description: "Group your metric with a groupBy field. \nAllowed fields are\
            \ ACCOUNT_ID, EVENT_STATUS, SCHEMA_NAME, USAGE_METER_ID. \nPlease refer\
            \ the table above for the list of combinations allowed in the groupBy\n"
          type: string
        configs:
          additionalProperties:
            type: string
          description: |
            Configurations.
            | Metric Name | Config Key | Allowed Values  | Default value |              Description             |
            |-------------|------------|-----------------|---------------|--------------------------------------|
            | REVENUE     | CURRENCY   | BASE or INVOICE | BASE          | currency to return the revenue in    |
          type: object
        filters:
          description: "Field Values” required when “Field Name” is present. \nYou\
            \ can find a list of Field Values (FilterEntry Name) combinations allowed\
            \ in the table mentioned above the body param.\n"
          items:
            $ref: '#/components/schemas/MetricQueryFilterEntry'
          maxItems: 5
          minItems: 1
          type: array
      required:
      - aggregationPeriod
      - id
      - name
      type: object
    GetMetricsResponse:
      additionalProperties: false
      description: Response to GetMetrics Request
      example:
        results:
        - data:
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          name: null
          id: id
        - data:
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          name: null
          id: id
      properties:
        results:
          items:
            $ref: '#/components/schemas/MetricQueryResponse'
          type: array
      required:
      - results
      type: object
    MetricQueryResponse:
      additionalProperties: false
      description: Response to GetMetrics Request
      example:
        data:
        - groupedBy:
            fieldName: fieldName
            fieldValue: fieldValue
          timestamps:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          metricValues:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
        - groupedBy:
            fieldName: fieldName
            fieldValue: fieldValue
          timestamps:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          metricValues:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
        name: null
        id: id
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/MetricName'
        data:
          items:
            $ref: '#/components/schemas/MetricDataPoints'
          type: array
      required:
      - data
      - id
      - name
      type: object
    MetricDataPoints:
      additionalProperties: false
      example:
        groupedBy:
          fieldName: fieldName
          fieldValue: fieldValue
        timestamps:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        metricValues:
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
      properties:
        groupedBy:
          $ref: '#/components/schemas/MetricDataPointsGroupedBy'
        timestamps:
          items:
            format: date-time
            type: string
          maxItems: 100
          type: array
        metricValues:
          items:
            type: number
          maxItems: 100
          type: array
      required:
      - metricValues
      - timestamps
      type: object
    UsageRate:
      example:
        usageMeterId: 01BX5ZZKBKACTAV9WEVG
        slabRates:
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 2
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 2
      properties:
        usageMeterId:
          description: The usage meter will be associated with the rate card to transform
            the usage value to billable value
          example: 01BX5ZZKBKACTAV9WEVG
          type: string
        slabRates:
          description: List of slab rates
          items:
            $ref: '#/components/schemas/SlabRate'
          type: array
      required:
      - slabRates
      - usageMeterId
      title: UsageRate
      type: object
    AccountAliases:
      example:
        alias: alias
        status: ACTIVE
      properties:
        alias:
          maxLength: 50
          type: string
        status:
          enum:
          - ACTIVE
          - ARCHIVED
          type: string
      title: AccountAliases
      type: object
    EventSchemaListData_allOf:
      properties:
        usageMetersCount:
          type: integer
      type: object
    PricingCycleConfig_startOffset:
      description: "Represents the start of pricing cycle in terms of\n - dayOffset\
        \ - number of days from beginning of month and\n - monthOffset - number of\
        \ months from beginning of interval (quarter, half-year or year)\nNote: If\
        \ a day with offset doesn't exist for a month, closest previous day is considered\n\
        Examples:\nMONTHLY -\n  - {dayOffset: 1, monthOffset: NIL} - First day of\
        \ every month\n  - {dayOffset: 12, monthOffset: NIL} - 12th of every month\n\
        \  - {dayOffset: 28, monthOffset: NIL} - 28th of every month. i.e, 28th of\
        \ Jan, 28th of Feb, ...\n  - {dayOffset: 30, monthOffset: NIL} - 30th of every\
        \ month. i.e, 28th of Jan, 28th of Feb, ...\n  - {dayOffset: LAST, monthOffset:\
        \ NIL} - Last day of every month. i.e, 31st of Jan, 28th of Feb, ...\nQUARTERLY\n\
        \  - {dayOffset: 15, monthOffset: FIRST} - 15th Jan, 15th Apr, 15th Jul and\
        \ 15th Oct\n  - {dayOffset: 15, monthOffset: 2} - 15th Feb, 15th May, 15th\
        \ Aug and 15th Nov\n  - {dayOffset: 15, monthOffset: LAST} - 15th Mar, 15th\
        \ Jun, 15th Sep and 15th Dec\n  - {dayOffset: LAST, monthOffset: FIRST} -\
        \ 31st Jan, 30th Apr, 30th Jul and 31th Oct\nHALF_YEARLY\n  - {dayOffset:\
        \ 15, monthOffset: FIRST} - 15th Jan and 15th Jul\n  - {dayOffset: 15, monthOffset:\
        \ 4} - 15th Apr and 15th Oct\n  - {dayOffset: 15, monthOffset: LAST} - 15th\
        \ Jun and 15th Dec\nANNUALLY\n  - {dayOffset: 15, monthOffset: FIRST} - 15th\
        \ Jan\n  - {dayOffset: 15, monthOffset: 1} - 15th Jan\n  - {dayOffset: LAST,\
        \ monthOffset: 2} - 29th Feb on Leap year, 28th otherwise \n  - {dayOffset:\
        \ 15, monthOffset: 8} - 15th Aug\n  - {dayOffset: 15, monthOffset: LAST} -\
        \ 15th Dec\n"
      example:
        dayOffset: dayOffset
        monthOffset: monthOffset
      properties:
        dayOffset:
          description: "min: \"1\" and max: \"31\" as strings. Spl. string allowed:\
            \ LAST\n"
          type: string
        monthOffset:
          description: "min: \"1\" and max: \"12\". Spl. string allowed: FIRST / LAST.\n\
            For QUARTERLY only 1 - 3 is allowed and for HALF_YEARLY 1 - 6. This being\
            \ an optional field, shouldn't be passed for MONTHLY.\n"
          type: string
      required:
      - dayOffset
      - monthOffset
      type: object
    StatusResponse_headers:
      additionalProperties: true
      properties:
        Content-Type:
          type: string
      type: object
    EventWithStatusAndEventPipelineInfo_allOf:
      properties:
        EventPipelineInfo:
          $ref: '#/components/schemas/EventPipelineInfo'
      required:
      - eventPipelineInfo
      type: object
    EventPipelineInfo_eventSchema:
      additionalProperties: false
      properties:
        name:
          type: string
        version:
          format: int32
          type: integer
      required:
      - name
      - version
      type: object
    EventPipelineInfo_usageMeters_inner:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        version:
          format: int32
          type: integer
        status:
          enum:
          - PROCESSED_FILTERED_OUT
          - PROCESSED_UNITS_COMPUTED
          type: string
        units:
          type: number
      required:
      - id
      - name
      - status
      - version
      type: object
    EventPipelineInfo_pricePlans_inner:
      additionalProperties: false
      properties:
        name:
          type: string
        id:
          type: string
        scheduleId:
          type: string
        cycleStart:
          format: date
          type: string
        cycleEnd:
          format: date
          type: string
        usageMeters:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - cycleEnd
      - cycleStart
      - id
      - name
      - scheduleId
      type: object
    EventPipelineInfoAccount:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      title: EventPipelineInfoAccount
      type: object
    EventPipelineInfoCustomer:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      title: EventPipelineInfoCustomer
      type: object
    MetricQueryFilterEntry:
      additionalProperties: false
      description: "\n| Metric Name | FilterEntry Name |    Allowed groupBy fields\
        \                 |      Default Values      |                 Allowed Values\
        \                  |\n|-------------|------------------|-------------------------------------------|--------------------------|-------------------------------------------------|\n\
        | EVENTS      | ACCOUNT_ID       | ACCOUNT_ID, EVENT_STATUS, SCHEMA_NAME \
        \    | None                     | *\\<one or more valid accounts IDs>    \
        \          |\n| EVENTS      | CUSTOMER_ID      | ACCOUNT_ID, EVENT_STATUS,\
        \ SCHEMA_NAME     | None                     | *\\<at most one valid customer\
        \ ID>               |\n| EVENTS      | SCHEMA_NAME      | ACCOUNT_ID, EVENT_STATUS,\
        \ SCHEMA_NAME     | None                     | *\\<at most one valid schema\
        \ names>              |\n| EVENTS      | EVENT_STATUS     | ACCOUNT_ID, EVENT_STATUS,\
        \ SCHEMA_NAME     | [PROCESSED, UNPROCESSED] | oneOrMoreOf PROCESSED, UNPROCESSED,\
        \ IN_PROGRESS |\n| USAGE       | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_ID\
        \                | None                     | *\\<one or more valid accounts\
        \ ID>               |\n| USAGE       | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_ID\
        \                | None                     | *\\<at most one valid customer\
        \ ID>               |\n| USAGE       | USAGE_METER_ID   | ACCOUNT_ID, USAGE_METER_ID\
        \                | None                     | *\\<one or more valid usage\
        \ meter name>          |\n| REVENUE     | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_ID\
        \                | None                     | *\\<one or more valid accounts\
        \ ID>               |\n| REVENUE     | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_ID\
        \                | None                     | *\\<at most one valid customer\
        \ ID>               |\n| REVENUE     | USAGE_METER_ID   | ACCOUNT_ID, USAGE_METER_ID\
        \                | None                     | *\\<one or more valid usage\
        \ meter name>          |\n| EVENTS      | ORGANIZATION_ID  | ACCOUNT_ID, USAGE_METER_ID\
        \                | <From auth token>        |                            \
        \                     |\n| USAGE       | ORGANIZATION_ID  | ACCOUNT_ID, USAGE_METER_ID\
        \                | <From auth token>        |                            \
        \                     |\n| REVENUE     | ORGANIZATION_ID  | ACCOUNT_ID, USAGE_METER_ID\
        \                | <From auth token>        |                            \
        \                     |\n"
      example:
        fieldName: ACCOUNT_ID
        fieldValues:
        - account#1
        - account#1
      properties:
        fieldName:
          example: ACCOUNT_ID
          type: string
        fieldValues:
          items:
            example: account#1
            type: string
          type: array
      required:
      - fieldName
      - fieldValues
      title: MetricQueryFilterEntry
      type: object
    MetricDataPointsGroupedBy:
      example:
        fieldName: fieldName
        fieldValue: fieldValue
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
      required:
      - fieldName
      - fieldValue
      title: MetricDataPointsGroupedBy
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: Bearer <credential>
      scheme: bearer
      type: http
    apiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey

