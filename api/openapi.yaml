openapi: 3.0.3
info:
  contact:
    email: engg@togai.com
  description: APIs for Togai App
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Togai Apis
  version: 1.0.0
externalDocs:
  description: Find out more about Togai
  url: https://docs.togai.com/docs
servers:
- description: Sandbox server
  url: https://sandbox-api.togai.com/
security:
- bearerAuth: []
tags:
- description: Customer level calls
  name: customers
- description: Account level calls
  name: accounts
- description: Event level calls
  name: events
- name: usage_meters
- name: price_plans
- description: APIs for getting events ingested in Togai
  externalDocs:
    description: docs
    url: https://togai.com/docs/billing/events
  name: Event Management
- description: APIs for getting Togai metrics
  externalDocs:
    description: docs
    url: https://togai.com/docs/metrics
  name: Metrics
paths:
  /customers:
    get:
      description: List customers with pagination and sort
      operationId: getCustomers
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                CustomerPaginatedResponse:
                  $ref: '#/components/examples/CustomerPaginatedResponse'
              schema:
                $ref: '#/components/schemas/CustomerPaginatedResponse'
          description: Response for list customers request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List customers
      tags:
      - customers
      x-accepts: application/json
    post:
      description: Create a customer and a default account corresponding to it
      operationId: createCustomer
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomerRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                CreateCustomerResponse:
                  $ref: '#/components/examples/CreateCustomerResponse'
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
          description: Response for Create customer request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a customer
      tags:
      - customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}:
    delete:
      description: Delete a customer by id
      operationId: deleteCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete a customer
      tags:
      - customers
      x-accepts: application/json
    get:
      description: Get a customer by id
      operationId: getCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Customer'
              schema:
                $ref: '#/components/schemas/Customer'
          description: Response for Get customer requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a customer
      tags:
      - customers
      x-accepts: application/json
    patch:
      description: Update a customer by id
      operationId: updateCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Customer'
              schema:
                $ref: '#/components/schemas/Customer'
          description: Response for Get customer requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a customer
      tags:
      - customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts:
    get:
      description: List accounts with pagination and sort
      operationId: getAccounts
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: "10"
          type: string
        style: form
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                AccountPaginatedResponse:
                  $ref: '#/components/examples/AccountPaginatedResponse'
              schema:
                $ref: '#/components/schemas/AccountPaginatedResponse'
          description: Response for list customers request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List accounts of customer
      tags:
      - accounts
      x-accepts: application/json
    post:
      description: Create an account
      operationId: createAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateAccountRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an account
      tags:
      - accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}:
    delete:
      description: Delete an account by id
      operationId: deleteAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an account
      tags:
      - accounts
      x-accepts: application/json
    get:
      description: Get an account
      operationId: getAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an account
      tags:
      - accounts
      x-accepts: application/json
    patch:
      description: Update an account by id
      operationId: updateAccount
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an account
      tags:
      - accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}/add_aliases:
    post:
      description: Add Aliases to an account by id
      operationId: addAliases
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AddAccountAliasesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add Aliases to account
      tags:
      - accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}/remove_aliases:
    post:
      description: Remove Aliases to an account by id
      operationId: removeAliases
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/RemoveAccountAliasesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Remove Aliases to account
      tags:
      - accounts
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}/accounts/{account_id}/price_plans:
    post:
      description: Associate a plan to an account
      operationId: associatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        explode: false
        in: path
        name: customer_id
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: G234DZZKBKACATFFGVGEMERFH
              maxLength: 50
              type: string
        explode: false
        in: path
        name: account_id
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/AssociatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                AssociatePricePlanResponse:
                  $ref: '#/components/examples/AssociatePricePlanResponse'
              schema:
                $ref: '#/components/schemas/AssociatePricePlanResponse'
          description: Response for associate price plan request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Associate a plan to an account
      tags:
      - accounts
      x-content-type: application/json
      x-accepts: application/json
  /event_schema:
    get:
      description: List event schemas with pagination and sort
      operationId: listEventSchemas
      parameters:
      - description: Filter by provided statuses
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: "10"
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ASC
          - DESC
          example: ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchemaPaginatedResponse:
                  $ref: '#/components/examples/EventSchemaListPaginatedResponse'
              schema:
                $ref: '#/components/schemas/EventSchemaListPaginatedResponse'
          description: Response for list events request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List event schemas
      tags:
      - events
      x-accepts: application/json
    post:
      description: Create an event schema
      operationId: createEventSchema
      requestBody:
        $ref: '#/components/requestBodies/CreateEventSchemaRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an event schema
      tags:
      - events
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}:
    delete:
      description: Delete an event schema
      operationId: deleteEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an event schema
      tags:
      - events
      x-accepts: application/json
    get:
      description: Get an event schema
      operationId: getEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: 2
              format: int32
              type: integer
        description: Optional version to get a specific version. Gets latest version
          if it is not provided.
        explode: true
        in: query
        name: version
        required: false
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an event schema
      tags:
      - events
      x-accepts: application/json
    patch:
      description: Update an event schema
      operationId: updateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateEventSchemaRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an event schema
      tags:
      - events
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/versions:
    get:
      description: List all event schema versions
      operationId: listEventSchemaVersions
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchemaVersionsResponse:
                  $ref: '#/components/examples/EventSchemaVersionsResponse'
              schema:
                $ref: '#/components/schemas/EventSchemaVersionsResponse'
          description: Response for list event schema versions request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List all event schema versions
      tags:
      - events
      x-accepts: application/json
  /event_schema/{event_schema_name}/activate:
    post:
      description: Activate an event schema
      operationId: activateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate an event schema
      tags:
      - events
      x-accepts: application/json
  /event_schema/{event_schema_name}/deactivate:
    post:
      description: Deactivate an event schema
      operationId: deactivateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Deactivate an event schema
      tags:
      - events
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters:
    get:
      description: List usage meters for event schema with pagination and sort
      operationId: getUsageMetersForEventSchema
      parameters:
      - description: Filter by provided statuses
        explode: true
        in: query
        name: statuses
        required: false
        schema:
          type: string
        style: form
      - description: Filter by provided aggregations
        explode: true
        in: query
        name: aggregations
        required: false
        schema:
          type: string
        style: form
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: "10"
          type: string
        style: form
      - explode: true
        in: query
        name: sortOrder
        required: false
        schema:
          enum:
          - ASC
          - DESC
          example: ASC
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                UsageMeterPaginatedResponse:
                  $ref: '#/components/examples/UsageMeterPaginatedResponse'
              schema:
                $ref: '#/components/schemas/UsageMeterPaginatedResponse'
          description: Response for list usage_meters request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List usage meters for event schema
      tags:
      - usage_meters
      x-accepts: application/json
    post:
      description: Create an usage meter
      operationId: createUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/CreateUsageMeterRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an usage meter
      tags:
      - usage_meters
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters/{usage_meter_name}:
    get:
      description: Get usage meter
      operationId: getUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get usage meter
      tags:
      - usage_meters
      x-accepts: application/json
    patch:
      description: Update an usage meter
      operationId: updateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_name
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateUsageMeterRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an usage meter
      tags:
      - usage_meters
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters/{usage_meter_name}/activate:
    post:
      description: Activate usage meter
      operationId: activateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate usage meter
      tags:
      - usage_meters
      x-accepts: application/json
  /event_schema/{event_schema_name}/usage_meters/{usage_meter_name}/deactivate:
    post:
      description: Deactivate usage meter
      operationId: deactivateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_schema_name
        required: true
        style: simple
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Deactivate usage meter
      tags:
      - usage_meters
      x-accepts: application/json
  /usage_meter/{usage_meter_name}:
    delete:
      description: Delete an Usage Meter
      operationId: deleteUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        explode: false
        in: path
        name: usage_meter_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an Usage Meter
      tags:
      - usage_meters
      x-accepts: application/json
  /price_plans:
    get:
      description: List price plans with pagination and sort
      operationId: getPricePlans
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: "10"
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanPaginatedResponse:
                  $ref: '#/components/examples/PricePlanPaginatedResponse'
              schema:
                $ref: '#/components/schemas/PricePlanPaginatedResponse'
          description: Response for list price plans request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List price plans
      tags:
      - price_plans
      x-accepts: application/json
    post:
      description: Create a price plan
      operationId: createPricePlan
      requestBody:
        $ref: '#/components/requestBodies/CreatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a price plan
      tags:
      - price_plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_name}:
    get:
      description: Get a price plan
      operationId: getPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: Rides - pro plan
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a price plan
      tags:
      - price_plans
      x-accepts: application/json
    patch:
      description: Update a price plan
      operationId: updatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: Rides - pro plan
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_name
        required: true
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a price plan
      tags:
      - price_plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_name}/activate:
    post:
      description: Activate a price plan
      operationId: activatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: Rides - pro plan
              maxLength: 50
              type: string
        explode: false
        in: path
        name: price_plan_name
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/PricePlan'
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate a price plan
      tags:
      - price_plans
      x-accepts: application/json
  /ingest:
    post:
      description: "API to ingest your application event to Togai for billing and\
        \ usage analytics. To know the limits on the ingestion api, check our docs\
        \ - https://togai.com/docs/limits."
      operationId: ingest
      requestBody:
        content:
          application/json:
            examples:
              IngestEventRequest:
                $ref: '#/components/examples/IngestEventRequest'
            schema:
              $ref: '#/components/schemas/IngestEventRequest'
        description: Request body to ingest events to Togai usage and billing management
          service.
        required: true
      responses:
        "202":
          description: Successfully accepted to process all the events from payload.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential "x-api-key" is not valid. Please check the response
            message for failure details.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the events as the size of the event payload
            is above the supported limit. Please check our docs for the api limits
            - https://togai.com/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service is currently unavailable to process the request.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Ingest events to Togai
      tags:
      - Event Ingestion
      x-controller-name: EventIngestionController
      x-operation-name: ingest
      x-content-type: application/json
      x-accepts: application/json
  /ingestBatch:
    post:
      description: "API to ingest your application event in batch to Togai for billing\
        \ and usage analytics. To know the limits on the ingestion api, check our\
        \ docs - https://togai.com/docs/limits."
      operationId: ingestBatch
      requestBody:
        content:
          application/json:
            examples:
              IngestEventBatchRequest:
                $ref: '#/components/examples/IngestEventBatchRequest'
            schema:
              $ref: '#/components/schemas/IngestBatchEventRequest'
        description: Request body to ingest events in batch to Togai usage and billing
          management service.
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                errors: []
              schema:
                $ref: '#/components/schemas/IngestBatchEventResponse'
          description: Successfully accepted to process all the events from payload.
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestBatchEventResponse'
          description: Partial failure. Few events from request were not accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential "x-api-key" is not valid. Please check the response
            message for failure details.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the events as the size of the event payload
            is above the supported limit. Please check our docs for the api limits
            - https://togai.com/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service is currently unavailable to process the request.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Ingest events to Togai in batch
      tags:
      - Event Ingestion
      x-controller-name: EventIngestionController
      x-operation-name: ingestBatch
      x-content-type: application/json
      x-accepts: application/json
  /events:
    get:
      description: API to get usage events ingested to Togai.
      operationId: getEvents
      parameters:
      - description: Pagination token used as a marker to get records from next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - description: Filter option to filter the events by processed/unprocessed status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          example: PROCESSED
          type: string
        style: form
      - description: Filter option to filter the events based on account id.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          example: "1234"
          type: string
        style: form
      - description: "Maximum page size expected by client to return the record list.\
          \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
          \ page size if no value is provided."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Start time filter in epoch milli seconds
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          example: 1650110402000
          format: int64
          type: integer
        style: form
      - description: End time filter in epoch milli seconds
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          example: 1650110402000
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                GetEventsResponse:
                  $ref: '#/components/examples/GetEventsResponse'
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to list events.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the query parameters provided. Please check
            our docs for the api limits - https://togai.io/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get usage events from Togai
      tags:
      - Event Management
      x-accepts: application/json
  /events/{event_id}:
    get:
      description: API to get the event given the event id.
      operationId: getSingleEvent
      parameters:
      - content:
          application/json:
            schema:
              example: f4a52f2d-b798-4e08-8b24-db0a5a468ba3
              maxLength: 50
              type: string
        explode: false
        in: path
        name: event_id
        required: true
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                GetEventResponse:
                  $ref: '#/components/examples/GetEventResponse'
              schema:
                $ref: '#/components/schemas/GetEventResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to get events.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get the usage event given event id.
      tags:
      - Event Management
      x-accepts: application/json
  /metrics:
    post:
      description: "To get the metrics, you make a POST request to the /metrics resource.\
        \ You can query up to five metrics in a single request. Single response dataset\
        \ can contain a maximum of 100 data points."
      operationId: getMetrics
      requestBody:
        $ref: '#/components/requestBodies/GetMetricsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                GetMetricsResponse:
                  $ref: '#/components/examples/GetMetricsResponse'
              schema:
                $ref: '#/components/schemas/GetMetricsResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to get metrics.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get togai metrics.
      tags:
      - Metrics
      x-content-type: application/json
      x-accepts: application/json
components:
  examples:
    SignupRequest:
      value:
        name: ACME Enterprise
        description: Brief description about ACME
        userDetails:
          name: Lorem Ipsum
          password: blackbELt@314
          email: john@example.com
          phone: +123456789
    CreateCustomerRequest:
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        account:
          id: ACC00001
          name: Primary Account
          aliases:
          - acme_primary
          - admin@example.com
    UpdateCustomerRequest:
      value:
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: 201 Bleeker Street
    CreateAccountRequest:
      value:
        id: ACC00001
        name: Primary Account
        aliases:
        - acme_primary
        - acme_1
    UpdateAccountRequest:
      value:
        name: New Account Name
    AddAccountAliasesRequest:
      value:
        aliases:
        - account2@acme.com
        - +1234567890
    RemoveAccountAliasesRequest:
      value:
        aliases:
        - account2@acme.com
        - +1234567890
    CreateUsageMeterRequest:
      value:
        name: Rides
        description: Cab rides
        type: COUNTER
        aggregation: SUM
        filters: "\"{\\\"and\\\": [{\\\"in\\\": [{\\\"var\\\": \\\"dimensions.city\\\
          \"}, \\\"chennai\\\", \\\"mumbai\\\"]}, {\\\"or\\\": [{\\\">\\\": [{\\\"\
          var\\\": \\\"attributes.distance\\\"}, 100]},{\\\"<\\\": [{\\\"var\\\":\
          \ \\\"attributes.distance\\\"}, 20]}]}]}\"\n"
        computation: "{\"*\":[{\"var\":\"attributes.distance\"}, 0.4]}"
    CreatePricePlanRequestUsage:
      value:
        name: Rides - Pro plan
        description: ""
        pricingCycle:
          interval: MONTHLY
          startType: STATIC
          offsetDays: 4
          gracePeriod: 3
        rateCard:
          type: USAGE
          usageConfig:
            rides - local:
              rateStrategy: PER_UNIT
              slabStrategy: TIER
              slabs:
              - rate: 100
                startAfter: 0
                order: 1
              - rate: 40
                startAfter: 10
                order: 2
              - rate: 10
                startAfter: 50
                order: 3
    CreatePricePlanRequestBundle:
      value:
        name: Rides - Pro plan
        description: ""
        pricingCycle:
          interval: MONTHLY
          startType: STATIC
          offsetDays: 4
          gracePeriod: 3
        rateCard:
          type: BUNDLE
          bundleConfig:
            rateStrategy: FLAT
            slabStrategy: TIER
            bundles:
            - rate: 100
              order: 1
              usageMeters:
                rides - local:
                  startAfter: 0
                rides - intercity:
                  startAfter: 0
            - rate: 40
              order: 2
              usageMeters:
                rides - local:
                  startAfter: 10
                rides - intercity:
                  startAfter: 500
            - rate: 20
              order: 3
              usageMeters:
                rides - local:
                  startAfter: 50
                rides - intercity:
                  startAfter: 2500
    UpdatePricePlanRequest:
      value:
        description: updated description
        pricingCycle:
          interval: MONTHLY
          startType: STATIC
          offsetDays: 6
          gracePeriod: 3
    AssociatePricePlanRequest:
      value:
        pricePlanName: Rides - Pro plan
        effectiveFrom: 2022-07-04
    Customer:
      summary: A sample Customer
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        status: ACTIVE
        updatedAt: 2020-07-04T12:00:00.000Z
        createdAt: 2020-07-04T12:00:00.000Z
    CreateCustomerResponse:
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        account:
          id: G234DZZKBKACATFFGVGEMERFH
          name: ACME Enterprise - Account
          aliases:
            alias: G234DZZKBKACATFFGVGEMERFH
            status: ACTIVE
    CustomerPaginatedResponse:
      value:
        data:
        - id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
          name: ACME Enterprise
          primaryEmail: admin@example.com
          billingAddress: "201 Boulevard, WA 53123"
          status: ACTIVE
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc
    AccountPaginatedResponse:
      value:
        data:
        - id: G234DZZKBKACATFFGVGEMERFI
          name: ACME Enterprise - Account2
          status: ACTIVE
          aliases:
          - alias: account2@acme.com
            status: ACTIVE
          - alias: +1234567890
            status: ARCHIVED
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc
    EventSchemaListPaginatedResponse:
      value:
        data:
        - name: ride_completed
          description: Cab ride completed
          version: 1
          status: DRAFT
          attributes:
          - name: distance
          - name: time
          dimensions:
          - name: city
          - name: ride_type
          associatedUsageMeters:
          - Rides
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc
    UsageMeterPaginatedResponse:
      value:
        data:
        - name: Rides
          description: Cab rides
          type: COUNTER
          aggregation: COUNT
          version: 1
          status: DRAFT
          filters: "{\n    \"and\": [\n      {\"in\": [{\"var\": \"dimension.city\"\
            }, \"chennai\", \"mumbai\"]},\n      \"or\": [\n          {\">\": [{\"\
            var\": \"attribute.distance\"}, 100]},\n          {\"<\": [{\"var\": \"\
            attribute.distance\"}, 20]}\n      ]\n    ]\n}\n"
          computation:
            '*':
            - var: attributes.distance
            - 0.4
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
          sortOrder: asc
    AssociatePricePlanResponse:
      value:
        accountId: G234DZZKBKACATFFGVGEMERFI
        accountName: ACME Enterprise - Account2
        pricingSchedules:
        - pricePlanName: Rides
          override: null
          startDate: 2022-01-01T00:00:00
          endDate: 2022-02-01T00:00:00
        - pricePlanName: Rides
          override:
            type: USAGE
            usageConfig:
              rides - local:
                rateStrategy: PER_UNIT
                slabStrategy: TIER
                slabs:
                - rate: 100
                  startAfter: 0
                  order: 1
                - rate: 40
                  startAfter: 10
                  order: 2
                - rate: 10
                  startAfter: 50
                  order: 3
          startDate: 2022-02-01T00:00:00
          endDate: 9999-01-01T00:00:00
    Account:
      summary: A sample Account
      value:
        id: G234DZZKBKACATFFGVGEMERFI
        name: ACME Enterprise - Account2
        aliases:
        - alias: account2@acme.com
          status: ACTIVE
        - alias: +1234567890
          status: ACTIVE
        status: ACTIVE
    EventSchema:
      summary: A sample event schema
      value:
        name: ride_completed
        description: Cab ride completed
        version: 1
        status: DRAFT
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: ride_type
    EventSchemaVersionsResponse:
      summary: A sample event schema versions response
      value:
        data:
        - name: ride_completed
          description: Cab ride completed
          version: 1
          status: DRAFT
          attributes:
          - name: distance
          - name: time
          dimensions:
          - name: city
          - name: ride_type
    UsageMeter:
      value:
        name: Rides
        description: Cab rides
        type: COUNTER
        aggregation: COUNT
        status: DRAFT
        filters: "{\n    \"and\": [\n      {\"in\": [{\"var\": \"dimension.city\"\
          }, \"chennai\", \"mumbai\"]},\n      \"or\": [\n          {\">\": [{\"var\"\
          : \"attribute.distance\"}, 100]},\n          {\"<\": [{\"var\": \"attribute.distance\"\
          }, 20]}\n      ]\n    ]\n}\n"
        computation:
          '*':
          - var: attributes.distance
          - 0.4
    PricePlan:
      value:
        name: Rides - Pro plan
        description: ""
        status: DRAFT
        pricingCycle:
          interval: MONTHLY
          startType: STATIC
          offsetDays: 4
          gracePeriod: 3
        pricingSchedule:
        - startDate: 2022-01-04T00:00:00
          endDate: 2022-02-04T00:00:00
          ratePayload:
            type: USAGE
            usageConfig:
              rides - local:
                rateStrategy: PER_UNIT
                slabStrategy: TIER
                slabs:
                - rate: 100
                  startAfter: 0
                  order: 1
                - rate: 40
                  startAfter: 10
                  order: 2
                - rate: 10
                  startAfter: 50
                  order: 3
        - startDate: 2022-02-04T00:00:00
          endDate: 2022-03-04T00:00:00
          ratePayload:
            type: BUNDLE
            bundleConfig:
              rateStrategy: FLAT
              slabStrategy: TIER
              bundles:
              - rate: 100
                order: 1
                usageMeters:
                  rides - local:
                    startAfter: 0
                  rides - intercity:
                    startAfter: 0
              - rate: 40
                order: 2
                usageMeters:
                  rides - local:
                    startAfter: 10
                  rides - intercity:
                    startAfter: 500
              - rate: 20
                order: 3
                usageMeters:
                  rides - local:
                    startAfter: 50
                  rides - intercity:
                    startAfter: 2500
    PricePlanPaginatedResponse:
      value:
        data:
        - name: Rides - Pro plan
          description: ""
          status: DRAFT
          pricingCycle:
            interval: MONTHLY
            startType: STATIC
            offsetDays: 4
            gracePeriod: 3
          usageMeters:
          - ride_completed
          - ride_started
          billingType: USAGE
          updatedAt: 2020-01-01T00:00:00
          createdAt: 2020-01-01T00:00:00
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
    PricingScheduleUsage:
      value:
        ratePayload:
          type: USAGE
          usageConfig:
            rides - local:
              rateStrategy: PER_UNIT
              slabStrategy: TIER
              slabs:
              - rate: 100
                startAfter: 0
                order: 1
              - rate: 40
                startAfter: 10
                order: 2
              - rate: 10
                startAfter: 50
                order: 3
        startDate: 2022-01-01T00:00:00
        endDate: 2022-02-01T00:00:00
    PricingScheduleBundle:
      value:
        ratePayload:
          type: BUNDLE
          bundleConfig:
            rateStrategy: FLAT
            slabStrategy: TIER
            bundles:
            - rate: 100
              order: 1
              usageMeters:
                rides - local:
                  startAfter: 0
                rides - intercity:
                  startAfter: 0
            - rate: 40
              order: 2
              usageMeters:
                rides - local:
                  startAfter: 10
                rides - intercity:
                  startAfter: 500
            - rate: 20
              order: 3
              usageMeters:
                rides - local:
                  startAfter: 50
                rides - intercity:
                  startAfter: 2500
        startDate: 2022-02-01T00:00:00
        endDate: 2022-03-01T00:00:00
    RateCardBundle:
      value:
        type: BUNDLE
        bundleConfig:
          rateStrategy: FLAT
          slabStrategy: TIER
          bundles:
          - rate: 100
            order: 1
            usageMeters:
              rides - local:
                startAfter: 0
              rides - intercity:
                startAfter: 0
          - rate: 40
            order: 2
            usageMeters:
              rides - local:
                startAfter: 10
              rides - intercity:
                startAfter: 500
          - rate: 20
            order: 3
            usageMeters:
              rides - local:
                startAfter: 50
              rides - intercity:
                startAfter: 2500
    RateCardUsage:
      value:
        type: USAGE
        usageConfig:
          rides - local:
            rateStrategy: PER_UNIT
            slabStrategy: TIER
            slabs:
            - rate: 100
              startAfter: 0
              order: 1
            - rate: 40
              startAfter: 10
              order: 2
            - rate: 10
              startAfter: 50
              order: 3
    IngestEventRequest:
      summary: example event ingestion request
      value:
        event:
          eventTimestamp: 2022-06-15T07:30:35.123
          eventName: travelCompletedEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          accountId: "1"
          eventAttributes:
          - attributeName: distanceTravelled
            attributeValue: 50
            attributeValueUnit: Miles
          - attributeName: timeSpent
            attributeValue: 60
            attributeValueUnit: Minutes
          dimensions:
            location: Seattle
            costCenterCode: 1234
            travelType: Business
    IngestEventBatchRequest:
      summary: example batch event ingestion request
      value:
        events:
        - eventTimestamp: 2022-06-15T07:30:35.123
          eventName: travelCompletedEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          accountId: "1"
          eventAttributes:
          - attributeName: distanceTravelled
            attributeValue: 50
            attributeValueUnit: Miles
          - attributeName: timeSpent
            attributeValue: 60
            attributeValueUnit: Minutes
          dimensions:
            location: Seattle
            costCenterCode: 1234
            travelType: Business
        - eventTimestamp: 2022-06-15T07:30:35.123
          eventName: sendMessageEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6c
          accountId: 1
          eventAttributes:
          - attributeName: messageSentCount
            attributeValue: 50
            attributeValueUnit: None
          - attributeName: sizeOfMessage
            attributeValue: 60
            attributeValueUnit: KiloBytes
          dimensions:
            location: Seattle
            costCenterCode: 1234
            messageProviderName: Twilio
    GetEventResponse:
      summary: example get event response
      value:
        events:
        - eventPayload:
            eventTimestamp: 2023-02-23T14:25:10Z
            eventName: travelCompletedEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            accountId: "1"
            eventAttributes:
            - attributeName: distanceTravelled
              attributeValue: 50
              attributeValueUnit: Miles
            - attributeName: timeSpent
              attributeValue: 60
              attributeValueUnit: Minutes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              travelType: Business
          eventPipelineInfo:
            eventSchema:
              name: Rides
              version: 1
            usageMeters:
            - name: rides_distance
              version: 1
              status: PROCESSED_UNITS_COMPUTED
              units: 10.42
            - name: rides_time
              version: 1
              status: PROCESSED_FILTERED_OUT
            pricePlans:
            - name: pro-plan
              id: 68551191-982b-4663-92fa-38a6f8313e91
              cycleStart: 04-03-2022
              cycleEnd: 04-04-2022
            account:
              id: acme-prod
            customer:
              id: acme_inc
          ingestionStatus:
            status: INGESTION_COMPLETED_EVENT_NOT_BILLED
            statusDescription: Event ingestion completed successfully but the event
              is not associated with any bill plan.
    GetEventsResponse:
      summary: example get batch event response
      value:
        events:
        - eventPayload:
            eventTimestamp: 2023-02-23T14:25:10Z
            eventName: travelCompletedEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            accountId: "1"
            eventAttributes:
            - attributeName: distanceTravelled
              attributeValue: 50
              attributeValueUnit: Miles
            - attributeName: timeSpent
              attributeValue: 60
              attributeValueUnit: Minutes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              travelType: Business
          ingestionStatus:
            status: INGESTION_COMPLETED_EVENT_NOT_BILLED
            statusDescription: Event ingestion completed successfully but the event
              is not associated with any bill plan.
        - eventPayload:
            eventTimestamp: 2023-02-23T14:25:10Z
            eventName: sendMessageEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6c
            accountId: "1"
            eventAttributes:
            - attributeName: messageSentCount
              attributeValue: 50
              attributeValueUnit: None
            - attributeName: sizeOfMessage
              attributeValue: 60
              attributeValueUnit: KiloBytes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              messageProviderName: Twilio
          ingestionStatus:
            status: INGESTION_COMPLETED
            statusDescription: Ingestion completed successfully
    GetMetricsResponse:
      summary: example get metrics response
      value:
        results:
        - id: m1
          name: EVENTS
          data:
            timestamps:
            - 2017-07-21T00:00:00Z
            - 2017-07-22T00:00:00Z
            metricValues:
            - 53
            - 32
        - id: m2
          name: USAGE
          data:
            timestamps:
            - 2017-07-01T00:00:00Z
            metricValues:
            - 123.45
  parameters:
    organization_id:
      content:
        application/json:
          schema:
            example: XlK5h64gND
            maxLength: 10
            pattern: "^[A-Z]{10}$"
            type: string
      explode: false
      in: path
      name: organization_id
      required: true
      style: simple
    customer_id:
      content:
        application/json:
          schema:
            example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
            maxLength: 50
            type: string
      explode: false
      in: path
      name: customer_id
      required: true
      style: simple
    account_id:
      content:
        application/json:
          schema:
            example: G234DZZKBKACATFFGVGEMERFH
            maxLength: 50
            type: string
      explode: false
      in: path
      name: account_id
      required: true
      style: simple
    event_schema_name:
      content:
        application/json:
          schema:
            example: rides
            maxLength: 50
            type: string
      explode: false
      in: path
      name: event_schema_name
      required: true
      style: simple
    usage_meter_name:
      content:
        application/json:
          schema:
            example: rides
            maxLength: 50
            type: string
      explode: false
      in: path
      name: usage_meter_name
      required: true
      style: simple
    next_token:
      explode: true
      in: query
      name: nextToken
      required: false
      schema:
        example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        type: string
      style: form
    page_size:
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        example: "10"
        type: string
      style: form
    sort_order:
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        enum:
        - ASC
        - DESC
        example: ASC
        type: string
      style: form
    price_plan_name:
      content:
        application/json:
          schema:
            example: Rides - pro plan
            maxLength: 50
            type: string
      explode: false
      in: path
      name: price_plan_name
      required: true
      style: simple
    version_query:
      content:
        application/json:
          schema:
            example: 2
            format: int32
            type: integer
      description: Optional version to get a specific version. Gets latest version
        if it is not provided.
      explode: true
      in: query
      name: version
      required: false
      style: form
    event_id:
      content:
        application/json:
          schema:
            example: f4a52f2d-b798-4e08-8b24-db0a5a468ba3
            maxLength: 50
            type: string
      explode: false
      in: path
      name: event_id
      required: true
      style: simple
    filter_next_page_token:
      description: Pagination token used as a marker to get records from next page.
      explode: true
      in: query
      name: nextToken
      required: false
      schema:
        example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        type: string
      style: form
    filter_status:
      description: Filter option to filter the events by processed/unprocessed status.
      explode: true
      in: query
      name: status
      required: false
      schema:
        example: PROCESSED
        type: string
      style: form
    filter_account_id:
      description: Filter option to filter the events based on account id.
      explode: true
      in: query
      name: account_id
      required: false
      schema:
        example: "1234"
        type: string
      style: form
    filter_page_size:
      description: "Maximum page size expected by client to return the record list.\
        \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
        \ page size if no value is provided."
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        example: 10
        type: integer
      style: form
    filter_start_time:
      description: Start time filter in epoch milli seconds
      explode: true
      in: query
      name: start_time
      required: false
      schema:
        example: 1650110402000
        format: int64
        type: integer
      style: form
    filter_end_time:
      description: End time filter in epoch milli seconds
      explode: true
      in: query
      name: end_time
      required: false
      schema:
        example: 1650110402000
        format: int64
        type: integer
      style: form
  requestBodies:
    SignupRequest:
      content:
        application/json:
          examples:
            SignupRequest:
              $ref: '#/components/examples/SignupRequest'
          schema:
            $ref: '#/components/schemas/SignupRequest'
      description: Payload to create organization
      required: true
    CreateCustomerRequest:
      content:
        application/json:
          examples:
            CreateCustomerRequest:
              $ref: '#/components/examples/CreateCustomerRequest'
          schema:
            $ref: '#/components/schemas/CreateCustomerRequest'
      description: Payload to create customer
      required: true
    UpdateCustomerRequest:
      content:
        application/json:
          examples:
            UpdateCustomerRequest:
              $ref: '#/components/examples/UpdateCustomerRequest'
          schema:
            $ref: '#/components/schemas/UpdateCustomerRequest'
      description: Payload to update customer
      required: true
    CreateAccountRequest:
      content:
        application/json:
          examples:
            CreateAccountRequest:
              $ref: '#/components/examples/CreateAccountRequest'
          schema:
            $ref: '#/components/schemas/CreateAccountRequest'
      description: Payload to create account
      required: true
    UpdateAccountRequest:
      content:
        application/json:
          examples:
            UpdateAccountRequest:
              $ref: '#/components/examples/UpdateAccountRequest'
          schema:
            $ref: '#/components/schemas/UpdateAccountRequest'
      description: Payload to update account
      required: true
    AddAccountAliasesRequest:
      content:
        application/json:
          examples:
            AddAccountAliasesRequest:
              $ref: '#/components/examples/AddAccountAliasesRequest'
          schema:
            $ref: '#/components/schemas/AddAccountAliasesRequest'
      description: Payload to add aliases to account
      required: true
    RemoveAccountAliasesRequest:
      content:
        application/json:
          examples:
            RemoveAccountAliasesRequest:
              $ref: '#/components/examples/RemoveAccountAliasesRequest'
          schema:
            $ref: '#/components/schemas/RemoveAccountAliasesRequest'
      description: Payload to remove aliases from account
      required: true
    CreateEventSchemaRequest:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/EventSchema'
          schema:
            $ref: '#/components/schemas/CreateEventSchemaRequest'
      description: Payload to create event schema
      required: true
    UpdateEventSchemaRequest:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/EventSchema'
          schema:
            $ref: '#/components/schemas/UpdateEventSchemaRequest'
      description: Payload to update event schema
      required: true
    CreateUsageMeterRequest:
      content:
        application/json:
          examples:
            UsageMeter:
              $ref: '#/components/examples/CreateUsageMeterRequest'
          schema:
            $ref: '#/components/schemas/CreateUsageMeterRequest'
      description: Payload to create usage meter
      required: true
    UpdateUsageMeterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUsageMeterRequest'
      description: Payload to create usage meter
      required: true
    AssociatePricePlanRequest:
      content:
        application/json:
          examples:
            AssociatePricePlanRequest:
              $ref: '#/components/examples/AssociatePricePlanRequest'
          schema:
            $ref: '#/components/schemas/AssociatePricePlanRequest'
      description: Payload to associate a price plan to an account
      required: true
    CreatePricePlanRequest:
      content:
        application/json:
          examples:
            PricePlanUsage:
              $ref: '#/components/examples/CreatePricePlanRequestUsage'
            PricePlanBundle:
              $ref: '#/components/examples/CreatePricePlanRequestBundle'
          schema:
            $ref: '#/components/schemas/CreatePricePlanRequest'
      description: Payload to create price plan
      required: true
    UpdatePricePlanRequest:
      content:
        application/json:
          examples:
            UpdatePricePlanRequest:
              $ref: '#/components/examples/UpdatePricePlanRequest'
          schema:
            $ref: '#/components/schemas/UpdatePricePlanRequest'
      description: Payload to update price plan
      required: true
    GetMetricsRequest:
      content:
        application/json:
          examples:
            GetMetricsRequest:
              value:
                startTime: 2017-07-21T00:00:00Z
                endTime: 2017-07-22T00:00:00Z
                metricQueries:
                - id: m1
                  name: EVENTS
                  aggregationPeriod: DAY
                  filters:
                  - filterName: ACCOUNT_ID
                    filterValues:
                    - account#1
                  - filterName: CUSTOMER_ID
                    filterValues:
                    - customer#1
                  - filterName: EVENT_STATUS
                    filterValues:
                    - ALL
                - id: m2
                  name: USAGE
                  aggregationPeriod: MONTH
                  filters:
                  - filterName: CUSTOMER_ID
                    filterValues:
                    - customer#1
          schema:
            $ref: '#/components/schemas/GetMetricsRequest'
  responses:
    BaseSuccessResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseSuccessResponse'
      description: OK
    ErrorResponse:
      content:
        application/json:
          examples:
            ErrorResponse:
              summary: Error message
              value:
                message: <Reason message>
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Error response
    SignupResponse:
      content:
        application/json:
          examples:
            SignupResponse:
              summary: Signup response
              value:
                organizationId: XlK5h64gND
                jwtToken: <big huge token>
          schema:
            $ref: '#/components/schemas/SignupResponse'
      description: Signup API response
    CreateCustomerResponse:
      content:
        application/json:
          examples:
            CreateCustomerResponse:
              $ref: '#/components/examples/CreateCustomerResponse'
          schema:
            $ref: '#/components/schemas/CreateCustomerResponse'
      description: Response for Create customer request
    CustomerResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/Customer'
          schema:
            $ref: '#/components/schemas/Customer'
      description: Response for Get customer requests
    CustomerPaginatedResponse:
      content:
        application/json:
          examples:
            CustomerPaginatedResponse:
              $ref: '#/components/examples/CustomerPaginatedResponse'
          schema:
            $ref: '#/components/schemas/CustomerPaginatedResponse'
      description: Response for list customers request
    AccountPaginatedResponse:
      content:
        application/json:
          examples:
            AccountPaginatedResponse:
              $ref: '#/components/examples/AccountPaginatedResponse'
          schema:
            $ref: '#/components/schemas/AccountPaginatedResponse'
      description: Response for list customers request
    AccountResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/Account'
          schema:
            $ref: '#/components/schemas/Account'
      description: Response for Create and Get account requests
    EventSchemaResponse:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/EventSchema'
          schema:
            $ref: '#/components/schemas/EventSchema'
      description: Response for Create and Get event schema requests
    EventSchemaListPaginatedResponse:
      content:
        application/json:
          examples:
            EventSchemaPaginatedResponse:
              $ref: '#/components/examples/EventSchemaListPaginatedResponse'
          schema:
            $ref: '#/components/schemas/EventSchemaListPaginatedResponse'
      description: Response for list events request
    EventSchemaVersionsResponse:
      content:
        application/json:
          examples:
            EventSchemaVersionsResponse:
              $ref: '#/components/examples/EventSchemaVersionsResponse'
          schema:
            $ref: '#/components/schemas/EventSchemaVersionsResponse'
      description: Response for list event schema versions request
    UsageMeterResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/UsageMeter'
          schema:
            $ref: '#/components/schemas/UsageMeter'
      description: Response for Create and Get usage event requests
    UsageMeterPaginatedResponse:
      content:
        application/json:
          examples:
            UsageMeterPaginatedResponse:
              $ref: '#/components/examples/UsageMeterPaginatedResponse'
          schema:
            $ref: '#/components/schemas/UsageMeterPaginatedResponse'
      description: Response for list usage_meters request
    PricePlanResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/PricePlan'
          schema:
            $ref: '#/components/schemas/PricePlan'
      description: Response for Create and Get price plan requests
    PricePlanPaginatedResponse:
      content:
        application/json:
          examples:
            PricePlanPaginatedResponse:
              $ref: '#/components/examples/PricePlanPaginatedResponse'
          schema:
            $ref: '#/components/schemas/PricePlanPaginatedResponse'
      description: Response for list price plans request
    AssociatePricePlanResponse:
      content:
        application/json:
          examples:
            AssociatePricePlanResponse:
              $ref: '#/components/examples/AssociatePricePlanResponse'
          schema:
            $ref: '#/components/schemas/AssociatePricePlanResponse'
      description: Response for associate price plan request
    GetMetricsResponse:
      content:
        application/json:
          examples:
            ErrorResponse:
              summary: Error message
              value:
                message: <Reason message>
          schema:
            $ref: '#/components/schemas/GetMetricsResponse'
      description: Get Metrics response
  schemas:
    SignupRequest:
      additionalProperties: false
      description: Payload to signup
      properties:
        name:
          maxLength: 50
          pattern: "^[_a-zA-Z0-9-\\s]{3,50}$"
          type: string
        description:
          maxLength: 500
          type: string
        userDetails:
          $ref: '#/components/schemas/UserDetails'
      required:
      - name
      - userDetails
      type: object
    UserDetails:
      additionalProperties: false
      description: Root user details for the organization
      properties:
        preferredUsername:
          maxLength: 50
          pattern: "^[A-Za-z0-9]{3,50}$"
          type: string
        name:
          maxLength: 50
          type: string
        password:
          maxLength: 100
          type: string
        email:
          maxLength: 100
          pattern: "^[A-Za-z0-9_+]{8,100}$"
          type: string
        phone:
          maxLength: 30
          type: string
      required:
      - email
      - name
      - password
      type: object
    CreateCustomerRequest:
      additionalProperties: false
      description: Payload to create customer
      example:
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        account:
          aliases:
          - aliases
          - aliases
          - aliases
          - aliases
          - aliases
          name: name
          id: id
      properties:
        id:
          description: Customer identifier
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          minLength: 50
          type: string
        account:
          $ref: '#/components/schemas/CreateAccountRequest'
      required:
      - billingAddress
      - id
      - name
      - primaryEmail
      type: object
    UpdateCustomerRequest:
      additionalProperties: false
      description: Payload to update customer
      example:
        name: name
        billingAddress: billingAddress
        primaryEmail: primaryEmail
      properties:
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          minLength: 50
          type: string
      type: object
    CreateAccountRequest:
      additionalProperties: false
      description: Payload to create account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
        name: name
        id: id
      properties:
        id:
          description: Identifier of the account
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        aliases:
          description: list of aliases for the account. Can be used interchangeably
            with 'id' for event ingestion.
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 0
          type: array
      required:
      - id
      - name
      type: object
    UpdateAccountRequest:
      additionalProperties: false
      description: Payload to update account
      example:
        name: name
      properties:
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
      type: object
    AddAccountAliasesRequest:
      additionalProperties: false
      description: Payload to add aliases from account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
      properties:
        aliases:
          description: List of aliases to add
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 1
          type: array
      type: object
    RemoveAccountAliasesRequest:
      additionalProperties: false
      description: Payload to remove aliases from account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
      properties:
        aliases:
          description: List of aliases to remove
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 1
          type: array
      type: object
    CreateEventSchemaRequest:
      additionalProperties: false
      description: Request to create event schema
      example:
        name: name
        description: description
        attributes:
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
      required:
      - attributes
      - dimensions
      - name
      type: object
    UpdateEventSchemaRequest:
      additionalProperties: false
      description: Request to update event schema
      example:
        description: description
        attributes:
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
      properties:
        description:
          description: Description of the event
          maxLength: 255
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
      required:
      - attributes
      - dimensions
      type: object
    CreateUsageMeterRequest:
      additionalProperties: false
      description: Request to create usage meter
      example:
        name: name
        description: description
        aggregation: DRAFT
        filters: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"}, \"\
          chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\": \"attribute.distance\"\
          }, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"}, 20]}\n    ]\n\
          \  ]\n}\n"
        type: COUNTER
        computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        type:
          description: Type of usage meter
          enum:
          - COUNTER
          - GAUGE
          - TIMER
          example: COUNTER
          type: string
        aggregation:
          description: Aggregation to be applied on usage meter result
          enum:
          - COUNT
          - SUM
          example: DRAFT
          type: string
        filters:
          description: |
            Filters to be applied on event before matching to usage meter in JSONLogic format (https://jsonlogic.com/)
          example: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          maxLength: 1500
          type: string
        computation:
          description: Computation. Has no effect if aggregation is 'count'
          example: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          maxLength: 500
          type: string
      required:
      - aggregation
      - name
      - type
      type: object
    UpdateUsageMeterRequest:
      additionalProperties: false
      description: Request to update usage meter
      example:
        description: description
        aggregation: COUNT
        filters: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"}, \"\
          chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\": \"attribute.distance\"\
          }, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"}, 20]}\n    ]\n\
          \  ]\n}\n"
        type: COUNTER
        computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
      properties:
        description:
          description: Description of the event
          maxLength: 255
          type: string
        type:
          description: "Type of usage meter\n* COUNTER - Count usage \n* GAUGE - Not\
            \ supported at the moment\n* TIMER - Not supported at the moment\n"
          enum:
          - COUNTER
          - GAUGE
          - TIMER
          example: COUNTER
          type: string
        aggregation:
          description: |
            Aggregation to be applied on usage meter result
            * COUNT - Counts number of events matching the usage meter
            * SUM - Sums up results of computation of all events matching usage meter
          enum:
          - COUNT
          - SUM
          example: COUNT
          type: string
        filters:
          description: |
            Filters to be applied on event before matching to usage meter in JSONLogic format (https://jsonlogic.com/)
          example: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          maxLength: 1500
          type: string
        computation:
          description: Computation. Has no effect if aggregation is 'count'
          example: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          maxLength: 500
          type: string
      required:
      - aggregation
      - type
      type: object
    CreatePricePlanRequest:
      additionalProperties: false
      description: Request to create a price plan
      example:
        rateCard:
          usageConfig:
            key:
              slabStrategy: TIER
              rateStrategy: FLAT
              name: name
              slabs:
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
          type: USAGE
          bundleConfig:
            slabStrategy: TIER
            rateStrategy: FLAT
            bundles:
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
        name: name
        description: description
        pricingCycle:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          startType: STATIC
          interval: MONTHLY
      properties:
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        pricingCycle:
          $ref: '#/components/schemas/PricingCycle'
        rateCard:
          $ref: '#/components/schemas/RateCard'
      required:
      - name
      - pricingCycle
      - rateCard
      type: object
    UpdatePricePlanRequest:
      additionalProperties: false
      description: Request to update a price plan
      example:
        rateCard:
          usageConfig:
            key:
              slabStrategy: TIER
              rateStrategy: FLAT
              name: name
              slabs:
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
          type: USAGE
          bundleConfig:
            slabStrategy: TIER
            rateStrategy: FLAT
            bundles:
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
        description: description
        pricingCycle:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          startType: STATIC
          interval: MONTHLY
      properties:
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        pricingCycle:
          $ref: '#/components/schemas/PricingCycle'
        rateCard:
          $ref: '#/components/schemas/RateCard'
      type: object
    AssociatePricePlanRequest:
      additionalProperties: false
      description: Request to associate a price plan to an account
      example:
        pricePlanName: pricePlanName
        rateCardOverride:
          usageConfig:
            key:
              slabStrategy: TIER
              rateStrategy: FLAT
              name: name
              slabs:
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
          type: USAGE
          bundleConfig:
            slabStrategy: TIER
            rateStrategy: FLAT
            bundles:
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
        effectiveFrom: 2000-01-23
      properties:
        pricePlanName:
          description: Name of the price plan
          maxLength: 50
          type: string
        effectiveFrom:
          description: |
            Date of effectiveness of the association.
            - Expected only if the account already has a price plan associated with it.
            - Date can only be startDate of any billing cycle of the currently associated price plan.
          format: date
          type: string
        rateCardOverride:
          $ref: '#/components/schemas/RateCard'
      required:
      - pricePlanName
      type: object
    BaseSuccessResponse:
      additionalProperties: false
      example:
        success: true
      properties:
        success:
          example: true
          type: boolean
      required:
      - success
      type: object
    ErrorResponse:
      additionalProperties: false
      properties:
        message:
          description: error description
          maxLength: 500
          type: string
      required:
      - message
      type: object
    SignupResponse:
      additionalProperties: false
      description: Signup response
      properties:
        organizationId:
          description: Organization Identifier
          maxLength: 10
          type: string
        jwtToken:
          description: Token which can be used for authentication
          type: string
      required:
      - jwtToken
      - organizationId
      type: object
    CreateCustomerResponse:
      additionalProperties: false
      example:
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        account:
          aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          status: ACTIVE
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          minLength: 50
          type: string
        account:
          $ref: '#/components/schemas/Account'
      required:
      - billingAddress
      - id
      - name
      - primaryEmail
      type: object
    CustomerPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          billingAddress: billingAddress
          primaryEmail: primaryEmail
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          billingAddress: billingAddress
          primaryEmail: primaryEmail
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    AccountPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          status: ACTIVE
        - aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          status: ACTIVE
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    EventSchemaListPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - null
        - null
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchemaListData'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    UsageMeterPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: rides-usage
          description: Meter to track cab rides
          aggregation: COUNT
          filters: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          type: COUNTER
          lastActivatedAt: 2000-01-23T04:56:07.000+00:00
          status: DRAFT
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: rides-usage
          description: Meter to track cab rides
          aggregation: COUNT
          filters: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          type: COUNTER
          lastActivatedAt: 2000-01-23T04:56:07.000+00:00
          status: DRAFT
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsageMeter'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    PricePlanListData:
      additionalProperties: false
      description: Data of price plan list
      example:
        usageMeters:
        - usageMeters
        - usageMeters
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        pricingCycle:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          startType: STATIC
          interval: MONTHLY
        status: DRAFT
        pricingType: pricingType
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        status:
          description: Status of Price plan
          enum:
          - DRAFT
          - ACTIVE
          - ARCHIVED
          type: string
        pricingCycle:
          $ref: '#/components/schemas/PricingCycle'
        usageMeters:
          description: Usage meters name linked to the price plan
          items:
            type: string
          type: array
        pricingType:
          description: Pricing type of the price plan
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - name
      - pricingCycle
      - pricingType
      - status
      - updatedAt
      - usageMeters
      type: object
    PricePlanPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - usageMeters:
          - usageMeters
          - usageMeters
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          pricingCycle:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            startType: STATIC
            interval: MONTHLY
          status: DRAFT
          pricingType: pricingType
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - usageMeters:
          - usageMeters
          - usageMeters
          createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          pricingCycle:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            startType: STATIC
            interval: MONTHLY
          status: DRAFT
          pricingType: pricingType
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PricePlanListData'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    AssociatePricePlanResponse:
      additionalProperties: false
      example:
        accountId: accountId
        pricingSchedules:
        - endDate: 2000-01-23T04:56:07.000+00:00
          pricePlanName: pricePlanName
          override:
            usageConfig:
              key:
                slabStrategy: TIER
                rateStrategy: FLAT
                name: name
                slabs:
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
            type: USAGE
            bundleConfig:
              slabStrategy: TIER
              rateStrategy: FLAT
              bundles:
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          pricePlanName: pricePlanName
          override:
            usageConfig:
              key:
                slabStrategy: TIER
                rateStrategy: FLAT
                name: name
                slabs:
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
            type: USAGE
            bundleConfig:
              slabStrategy: TIER
              rateStrategy: FLAT
              bundles:
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        accountName: accountName
      properties:
        accountId:
          description: Identifier of the account
          maxLength: 50
          type: string
        accountName:
          description: Name of the customer
          type: string
        pricingSchedules:
          items:
            $ref: '#/components/schemas/PlanOverride'
          type: array
      required:
      - accountId
      - accountName
      - pricingSchedules
      type: object
    Customer:
      additionalProperties: false
      description: Structure of customer
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        status: ACTIVE
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          minLength: 50
          type: string
        status:
          description: Status of the customer
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - billingAddress
      - createdAt
      - id
      - name
      - primaryEmail
      - status
      - updatedAt
      type: object
    Account:
      additionalProperties: false
      description: Structure of an account
      example:
        aliases:
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        name: name
        id: id
        status: ACTIVE
      properties:
        id:
          description: Identifier of the account
          maxLength: 50
          type: string
        name:
          description: Name of the customer
          maxLength: 255
          minLength: 3
          type: string
        aliases:
          description: list of aliases of the account
          items:
            $ref: '#/components/schemas/AccountAliases'
          maxItems: 10
          minItems: 0
          type: array
        status:
          description: Status of the account
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
      required:
      - id
      - name
      - status
      type: object
    EventSchemaVersionsResponse:
      additionalProperties: false
      description: Response for event schema versions
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          attributes:
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          version: 1
          status: DRAFT
          dimensions:
          - name: city
          - name: city
          - name: city
          - name: city
          - name: city
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          attributes:
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          - name: distance
            default_unit: kms
          version: 1
          status: DRAFT
          dimensions:
          - name: city
          - name: city
          - name: city
          - name: city
          - name: city
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchema'
          type: array
      required:
      - data
      type: object
    EventSchemaListData:
      allOf:
      - $ref: '#/components/schemas/EventSchema'
      - $ref: '#/components/schemas/EventSchemaListData_allOf'
    EventSchema:
      additionalProperties: false
      description: Structure of an event schema
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        attributes:
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        - name: distance
          default_unit: kms
        version: 1
        status: DRAFT
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        version:
          description: Version of event schema
          example: 1
          format: int32
          minimum: 1
          type: integer
        status:
          description: "Status of event schema\n* DRAFT - Schema is in draft state\
            \ \n* ACTIVE - Schema is currently active \n* INACTIVE - Schema is currently\
            \ inactive\n* ARCHIVED - Older version of event schema\n"
          enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - ARCHIVED
          example: DRAFT
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
          uniqueItems: true
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
          uniqueItems: true
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - attributes
      - name
      - version
      type: object
    EventAttributeSchema:
      additionalProperties: false
      description: Structure of an event attribute
      example:
        name: distance
        default_unit: kms
      properties:
        name:
          description: Name of the event attribute.
          example: distance
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        default_unit:
          description: Unit for the attribute
          example: kms
          maxLength: 10
          type: string
      required:
      - name
      type: object
    DimensionsSchema:
      additionalProperties: false
      description: Structure of dimensions
      example:
        name: city
      properties:
        name:
          description: Name of the event dimension
          example: city
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
      required:
      - name
      type: object
    UsageMeter:
      additionalProperties: false
      description: Structure of usage meter
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: rides-usage
        description: Meter to track cab rides
        aggregation: COUNT
        filters: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"}, \"\
          chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\": \"attribute.distance\"\
          }, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"}, 20]}\n    ]\n\
          \  ]\n}\n"
        type: COUNTER
        lastActivatedAt: 2000-01-23T04:56:07.000+00:00
        status: DRAFT
        computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the usage meter
          example: rides-usage
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          example: Meter to track cab rides
          maxLength: 255
          type: string
        type:
          description: Type of usage meter
          enum:
          - COUNTER
          - GAUGE
          - TIMER
          example: COUNTER
          type: string
        status:
          description: Status of usage meter
          enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - ARCHIVED
          example: DRAFT
          type: string
        aggregation:
          description: Aggregation to be applied on usage meter result
          enum:
          - COUNT
          - SUM
          example: COUNT
          type: string
        filters:
          description: |
            Filters to be applied on event before matching to usage meter in JSONLogic format (https://jsonlogic.com/)
          example: "{\n  \"and\": [\n    {\"in\": [{\"var\": \"dimension.city\"},\
            \ \"chennai\", \"mumbai\"]},\n    \"or\": [\n      {\">\": [{\"var\":\
            \ \"attribute.distance\"}, 100]},\n      {\"<\": [{\"var\": \"attribute.distance\"\
            }, 20]}\n    ]\n  ]\n}\n"
          maxLength: 1500
          type: string
        computation:
          description: Computation. Has no effect if aggregation is 'count'
          example: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          maxLength: 500
          type: string
        createdAt:
          format: date-time
          type: string
        lastActivatedAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - aggregation
      - name
      - type
      type: object
    PaginationOptions:
      additionalProperties: false
      example:
        sortOrder: ASC
        pageSize: 0
      properties:
        pageSize:
          type: integer
        sortOrder:
          enum:
          - ASC
          - DESC
          type: string
      type: object
    PricePlan:
      additionalProperties: false
      description: Price plan entity
      example:
        pricingSchedule:
        - endDate: 2000-01-23T04:56:07.000+00:00
          ratePayload:
            usageConfig:
              key:
                slabStrategy: TIER
                rateStrategy: FLAT
                name: name
                slabs:
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
            type: USAGE
            bundleConfig:
              slabStrategy: TIER
              rateStrategy: FLAT
              bundles:
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          ratePayload:
            usageConfig:
              key:
                slabStrategy: TIER
                rateStrategy: FLAT
                name: name
                slabs:
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
                - startAfter: 6.027456183070403
                  rate: 0.8008281904610115
                  order: 2
            type: USAGE
            bundleConfig:
              slabStrategy: TIER
              rateStrategy: FLAT
              bundles:
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
              - usageMeters:
                  key:
                    startAfter: 2.3021358869347655
                rate: 5.962133916683182
                name: name
                order: 6
          startDate: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        pricingCycle:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          startType: STATIC
          interval: MONTHLY
        status: DRAFT
      properties:
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        status:
          description: Status of Price plan
          enum:
          - DRAFT
          - ACTIVE
          - ARCHIVED
          type: string
        pricingCycle:
          $ref: '#/components/schemas/PricingCycle'
        pricingSchedule:
          items:
            $ref: '#/components/schemas/PricingSchedule'
          type: array
      required:
      - name
      - pricingCycle
      - pricingSchedule
      - status
      type: object
    PricingCycle:
      description: Represents configurations related to pricing cycle
      example:
        gracePeriod: 3
        startOffset:
          dayOffset: dayOffset
          monthOffset: monthOffset
        startType: STATIC
        interval: MONTHLY
      properties:
        interval:
          enum:
          - MONTHLY
          - QUARTERLY
          - HALF_YEARLY
          - ANNUALLY
          type: string
        startType:
          enum:
          - STATIC
          type: string
        startOffset:
          $ref: '#/components/schemas/PricingCycle_startOffset'
        gracePeriod:
          example: 3
          format: int32
          type: integer
      required:
      - gracePeriod
      - interval
      - startOffset
      - startType
      type: object
    PricingSchedule:
      additionalProperties: false
      description: "Represents effectiveness period and config of a price plan. i.e,\
        \ price plan bound by time."
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        ratePayload:
          usageConfig:
            key:
              slabStrategy: TIER
              rateStrategy: FLAT
              name: name
              slabs:
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
          type: USAGE
          bundleConfig:
            slabStrategy: TIER
            rateStrategy: FLAT
            bundles:
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        ratePayload:
          $ref: '#/components/schemas/RateCard'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
      - endDate
      - startDate
      type: object
    PlanOverride:
      additionalProperties: false
      description: "Represents effectiveness period and config of a price plan. i.e,\
        \ price plan bound by time."
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        pricePlanName: pricePlanName
        override:
          usageConfig:
            key:
              slabStrategy: TIER
              rateStrategy: FLAT
              name: name
              slabs:
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
              - startAfter: 6.027456183070403
                rate: 0.8008281904610115
                order: 2
          type: USAGE
          bundleConfig:
            slabStrategy: TIER
            rateStrategy: FLAT
            bundles:
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
            - usageMeters:
                key:
                  startAfter: 2.3021358869347655
              rate: 5.962133916683182
              name: name
              order: 6
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        pricePlanName:
          type: string
        override:
          $ref: '#/components/schemas/RateCard'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
      - endDate
      - pricePlanName
      - startDate
      type: object
    RateCard:
      description: Represents a rate card
      example:
        usageConfig:
          key:
            slabStrategy: TIER
            rateStrategy: FLAT
            name: name
            slabs:
            - startAfter: 6.027456183070403
              rate: 0.8008281904610115
              order: 2
            - startAfter: 6.027456183070403
              rate: 0.8008281904610115
              order: 2
            - startAfter: 6.027456183070403
              rate: 0.8008281904610115
              order: 2
            - startAfter: 6.027456183070403
              rate: 0.8008281904610115
              order: 2
            - startAfter: 6.027456183070403
              rate: 0.8008281904610115
              order: 2
        type: USAGE
        bundleConfig:
          slabStrategy: TIER
          rateStrategy: FLAT
          bundles:
          - usageMeters:
              key:
                startAfter: 2.3021358869347655
            rate: 5.962133916683182
            name: name
            order: 6
          - usageMeters:
              key:
                startAfter: 2.3021358869347655
            rate: 5.962133916683182
            name: name
            order: 6
          - usageMeters:
              key:
                startAfter: 2.3021358869347655
            rate: 5.962133916683182
            name: name
            order: 6
          - usageMeters:
              key:
                startAfter: 2.3021358869347655
            rate: 5.962133916683182
            name: name
            order: 6
          - usageMeters:
              key:
                startAfter: 2.3021358869347655
            rate: 5.962133916683182
            name: name
            order: 6
      properties:
        type:
          enum:
          - USAGE
          - BUNDLE
          type: string
        usageConfig:
          additionalProperties:
            $ref: '#/components/schemas/RateCardUsage_value'
          type: object
        bundleConfig:
          $ref: '#/components/schemas/RateCardBundle'
      required:
      - type
      type: object
    RateCardUsage:
      additionalProperties:
        $ref: '#/components/schemas/RateCardUsage_value'
      type: object
    UsageStrategy:
      description: Represents a pricing strategy (rates + slabs) for usage price plan
      example:
        startAfter: 6.027456183070403
        rate: 0.8008281904610115
        order: 2
      properties:
        rate:
          type: number
        startAfter:
          format: double
          type: number
        order:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
      required:
      - order
      - rate
      - startAfter
      type: object
    RateCardBundle:
      example:
        slabStrategy: TIER
        rateStrategy: FLAT
        bundles:
        - usageMeters:
            key:
              startAfter: 2.3021358869347655
          rate: 5.962133916683182
          name: name
          order: 6
        - usageMeters:
            key:
              startAfter: 2.3021358869347655
          rate: 5.962133916683182
          name: name
          order: 6
        - usageMeters:
            key:
              startAfter: 2.3021358869347655
          rate: 5.962133916683182
          name: name
          order: 6
        - usageMeters:
            key:
              startAfter: 2.3021358869347655
          rate: 5.962133916683182
          name: name
          order: 6
        - usageMeters:
            key:
              startAfter: 2.3021358869347655
          rate: 5.962133916683182
          name: name
          order: 6
      properties:
        rateStrategy:
          enum:
          - FLAT
          type: string
        slabStrategy:
          enum:
          - TIER
          type: string
        bundles:
          items:
            $ref: '#/components/schemas/BundleStrategy'
          maxItems: 10
          minItems: 1
          type: array
      required:
      - bundles
      - rateStrategy
      - slabStrategy
      type: object
    BundleStrategy:
      description: Represents a pricing strategy (rates + slabs) for bundle price
        plan
      example:
        usageMeters:
          key:
            startAfter: 2.3021358869347655
        rate: 5.962133916683182
        name: name
        order: 6
      properties:
        name:
          maxLength: 50
          minLength: 3
          type: string
        rate:
          type: number
        order:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        usageMeters:
          additionalProperties:
            $ref: '#/components/schemas/BundleStrategy_usageMeters_value'
          type: object
      required:
      - name
      - order
      - rate
      - usageMeters
      type: object
    IngestEventRequest:
      additionalProperties: false
      description: Payload for ingesting events
      example:
        event:
          accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
      properties:
        event:
          $ref: '#/components/schemas/Event'
      type: object
    IngestBatchEventRequest:
      additionalProperties: false
      description: Payload for ingesting batch events
      example:
        events:
        - accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
        - accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
        - accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
        - accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
        - accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
      properties:
        events:
          items:
            $ref: '#/components/schemas/Event'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - events
      type: object
    Event:
      additionalProperties: false
      description: Contents of the event
      example:
        accountId: accountId
        eventAttributes:
        - attributeValue: attributeValue
          attributeName: apiUsage
          attributeValueUnit: attributeValueUnit
        - attributeValue: attributeValue
          attributeName: apiUsage
          attributeValueUnit: attributeValueUnit
        - attributeValue: attributeValue
          attributeName: apiUsage
          attributeValueUnit: attributeValueUnit
        - attributeValue: attributeValue
          attributeName: apiUsage
          attributeValueUnit: attributeValueUnit
        - attributeValue: attributeValue
          attributeName: apiUsage
          attributeValueUnit: attributeValueUnit
        eventName: eventName
        id: id
        eventTimestamp: 2000-01-23T04:56:07.000+00:00
        dimensions:
          key: dimensions
      properties:
        eventName:
          description: Name of the event to be recorded.
          maxLength: 255
          type: string
        id:
          description: "A unique value to identify the event instance. This unique\
            \ value should be generated by the client and it acts as the **idempotency\
            \ key**. Togai server will use this key to recognize subsequent retries\
            \ of the same request and avoid metering multiple times for that same\
            \ request. This id can be created in any format but we recommend using\
            \ UUIDv4 to reduce collision occurance. \n\n NOTE1: Expiry time for idempotency\
            \ validation will be until the end of the billing cycle. Any request which\
            \ comes after the billing cycle with the same id will be treated as new\
            \ request and ingested for metering.\n\n NOTE2: If the billing cycle is\
            \ not configured for the idempotency validation will be until **10 days**\
            \ of the event ingestion."
          maxLength: 255
          type: string
        eventTimestamp:
          description: Source time stamp of the event. This timestamp must be in ISO
            8601 format.
          format: date-time
          type: string
        accountId:
          maxLength: 255
          type: string
        eventAttributes:
          items:
            $ref: '#/components/schemas/EventAttribute'
          maxItems: 50
          type: array
        dimensions:
          additionalProperties:
            type: string
          description: "Dimensions are tags/labels associated with the events. This\
            \ dimensions can be used to configure billing, for queries, analytics\
            \ and reports."
          type: object
      required:
      - accountId
      - dimensions
      - eventAttributes
      - eventName
      - eventTimestamp
      - id
      type: object
    EventAttribute:
      additionalProperties: false
      description: Metric to be recorded
      example:
        attributeValue: attributeValue
        attributeName: apiUsage
        attributeValueUnit: attributeValueUnit
      properties:
        attributeName:
          description: Name of the event attribute
          example: apiUsage
          maxLength: 50
          type: string
        attributeValue:
          description: Value of the event attribute
          maxLength: 50
          type: string
        attributeValueUnit:
          description: "Unit with which the attribute value was measured. Natively\
            \ supported units - \"Meters, Miles, Kilometers, Grams, Kilograms, ounces,\
            \ Pounds, Minutes, Hours, Seconds, Milliseconds, Microseconds, None\"\
            . Clients are free to add any other custom units."
          maxLength: 50
          type: string
      required:
      - attributeName
      - attributeValue
      type: object
    Dimensions:
      additionalProperties:
        type: string
      description: "Dimensions are tags/labels associated with the events. This dimensions\
        \ can be used to configure billing, for queries, analytics and reports."
      type: object
    IngestError:
      additionalProperties: false
      description: ""
      example:
        eventPayload:
          accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
        message: message
      properties:
        message:
          type: string
        eventPayload:
          $ref: '#/components/schemas/Event'
      type: object
    IngestEventResponse:
      additionalProperties: false
      properties:
        ingestionRequestId:
          description: "On successful ingestion acceptance request, ingestion request\
            \ id will be returned. This ingestion id can be used by clients to query\
            \ the status of ingestion (IN_PROGRESS, COMPLETED)."
          maxLength: 500
          type: string
      required:
      - ingestionRequestId
      type: object
    IngestBatchEventResponse:
      additionalProperties: false
      example:
        errors:
        - eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
          message: message
        - eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
          message: message
        - eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
          message: message
        - eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
          message: message
        - eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
          message: message
      properties:
        errors:
          items:
            $ref: '#/components/schemas/IngestError'
          maxItems: 100
          type: array
      required:
      - errors
      type: object
    StatusResponse:
      properties:
        greeting:
          type: string
        date:
          type: string
        url:
          type: string
        headers:
          $ref: '#/components/schemas/StatusResponse_headers'
      title: StatusResponse
      type: object
    GetEventResponse:
      additionalProperties: false
      description: Get single event response
      example:
        events:
        - null
        - null
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventWithStatusAndEventPipelineInfo'
          type: array
      type: object
    GetEventsResponse:
      additionalProperties: false
      description: Get batch events response
      example:
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        events:
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          eventPayload:
            accountId: accountId
            eventAttributes:
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            - attributeValue: attributeValue
              attributeName: apiUsage
              attributeValueUnit: attributeValueUnit
            eventName: eventName
            id: id
            eventTimestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: dimensions
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventWithStatus'
          maxItems: 50
          minItems: 1
          type: array
        nextToken:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          maxLength: 500
          type: string
      required:
      - events
      type: object
    EventWithStatus:
      additionalProperties: false
      description: Raw usage event ingested by the business team and the status of
        the event ingestion.
      example:
        ingestionStatus:
          statusDescription: Ingestion Completed successfully
          status: INGESTION_COMPLETED
        eventPayload:
          accountId: accountId
          eventAttributes:
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          - attributeValue: attributeValue
            attributeName: apiUsage
            attributeValueUnit: attributeValueUnit
          eventName: eventName
          id: id
          eventTimestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: dimensions
      properties:
        eventPayload:
          $ref: '#/components/schemas/Event'
        ingestionStatus:
          $ref: '#/components/schemas/IngestionStatus'
      required:
      - eventPayload
      - ingestionStatus
      type: object
    EventWithStatusAndEventPipelineInfo:
      allOf:
      - $ref: '#/components/schemas/EventWithStatus'
      - $ref: '#/components/schemas/EventWithStatusAndEventPipelineInfo_allOf'
    IngestionStatus:
      additionalProperties: false
      description: Status about the event ingestion.
      example:
        statusDescription: Ingestion Completed successfully
        status: INGESTION_COMPLETED
      properties:
        status:
          description: Ingestion status
          enum:
          - INGESTION_IN_PROGRESS
          - INGESTION_FAILED
          - INGESTION_FAILED_SCHEMA_NOT_DEFINED
          - INGESTION_FAILED_UNITS_INVALID
          - INGESTION_COMPLETED_NO_MATCHING_METERS
          - INGESTION_COMPLETED_EVENT_METERED
          - INGESTION_COMPLETED_EVENT_NOT_METERED
          - UNKNOWN
          example: INGESTION_COMPLETED
          type: string
        statusDescription:
          example: Ingestion Completed successfully
          maxLength: 250
          type: string
      required:
      - status
      type: object
    EventPipelineInfo:
      additionalProperties: false
      description: Information related to ingestion of an event
      properties:
        eventSchema:
          $ref: '#/components/schemas/EventPipelineInfo_eventSchema'
        usageMeters:
          items:
            $ref: '#/components/schemas/EventPipelineInfo_usageMeters_inner'
          type: array
        pricePlans:
          items:
            $ref: '#/components/schemas/EventPipelineInfo_pricePlans_inner'
          type: array
        account:
          $ref: '#/components/schemas/EventPipelineInfoAccount'
        customer:
          $ref: '#/components/schemas/EventPipelineInfoCustomer'
      type: object
    GetMetricsRequest:
      additionalProperties: false
      description: Request to get metrics from togai
      example:
        metricQueries:
        - name: null
          id: id
          groupBy: groupBy
          filters:
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          aggregationPeriod: DAY
        - name: null
          id: id
          groupBy: groupBy
          filters:
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          - fieldName: fieldName
            fieldValues:
            - fieldValues
            - fieldValues
          aggregationPeriod: DAY
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        startTime:
          format: date-time
          type: string
        endTime:
          format: date-time
          type: string
        metricQueries:
          items:
            $ref: '#/components/schemas/MetricQuery'
          type: array
          uniqueItems: true
      required:
      - endTime
      - metricQueries
      - startTime
      type: object
    MetricName:
      enum:
      - EVENTS
      - USAGE
      - REVENUE
      type: string
    MetricQuery:
      additionalProperties: false
      description: Object representing a single metrics query
      example:
        name: null
        id: id
        groupBy: groupBy
        filters:
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        - fieldName: fieldName
          fieldValues:
          - fieldValues
          - fieldValues
        aggregationPeriod: DAY
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/MetricName'
        aggregationPeriod:
          enum:
          - DAY
          - WEEK
          - MONTH
          type: string
        groupBy:
          type: string
        filters:
          items:
            $ref: '#/components/schemas/MetricQueryFilterEntry'
          maxItems: 5
          minItems: 1
          type: array
      required:
      - aggregationPeriod
      - id
      - name
      type: object
    GetMetricsResponse:
      additionalProperties: false
      description: Response to GetMetrics Request
      example:
        results:
        - data:
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          name: null
          id: id
        - data:
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          name: null
          id: id
      properties:
        results:
          items:
            $ref: '#/components/schemas/MetricQueryResponse'
          type: array
      required:
      - results
      type: object
    MetricQueryResponse:
      additionalProperties: false
      description: Response to GetMetrics Request
      example:
        data:
        - groupedBy:
            fieldName: fieldName
            fieldValue: fieldValue
          timestamps:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          metricValues:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
        - groupedBy:
            fieldName: fieldName
            fieldValue: fieldValue
          timestamps:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          metricValues:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
        name: null
        id: id
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/MetricName'
        data:
          items:
            $ref: '#/components/schemas/MetricDataPoints'
          type: array
      required:
      - data
      - id
      - name
      type: object
    MetricDataPoints:
      additionalProperties: false
      example:
        groupedBy:
          fieldName: fieldName
          fieldValue: fieldValue
        timestamps:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        metricValues:
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
      properties:
        groupedBy:
          $ref: '#/components/schemas/MetricDataPointsGroupedBy'
        timestamps:
          items:
            format: date-time
            type: string
          maxItems: 100
          type: array
        metricValues:
          items:
            type: number
          maxItems: 100
          type: array
      required:
      - metricValues
      - timestamps
      type: object
    AccountAliases:
      example:
        alias: alias
        status: ACTIVE
      properties:
        alias:
          maxLength: 50
          type: string
        status:
          enum:
          - ACTIVE
          - ARCHIVED
          type: string
      title: AccountAliases
      type: object
    EventSchemaListData_allOf:
      properties:
        associatedUsageMeters:
          items:
            type: string
          type: array
      type: object
    PricingCycle_startOffset:
      description: "Represents the start of pricing cycle in terms of\n - dayOffset\
        \ - number of days from beginning of month and\n - monthOffset - number of\
        \ months from beginning of interval (quarter, half-year or year)\nNote: If\
        \ a day with offset doesn't exist for a month, closest previous day is considered\n\
        Examples:\nMONTHLY -\n  - {dayOffset: 1} - First day of every month\n  - {dayOffset:\
        \ 12} - 12th of every month\n  - {dayOffset: 28} - 28th of every month. i.e,\
        \ 28th of Jan, 28th of Feb, ...\n  - {dayOffset: 30} - 30th of every month.\
        \ i.e, 28th of Jan, 28th of Feb, ...\n  - {dayOffset: LAST} - Last day of\
        \ every month. i.e, 31st of Jan, 28th of Feb, ...\nQUARTERLY\n  - {dayOffset:\
        \ 15, monthOffset: FIRST} - 15th Jan, 15th Apr, 15th Jul and 15th Oct\n  -\
        \ {dayOffset: 15, monthOffset: 2} - 15th Feb, 15th May, 15th Aug and 15th\
        \ Nov\n  - {dayOffset: 15, monthOffset: LAST} - 15th Mar, 15th Jun, 15th Sep\
        \ and 15th Dec\n  - {dayOffset: LAST, monthOffset: FIRST} - 31st Jan, 30th\
        \ Apr, 30th Jul and 31th Oct\nHALF_YEARLY\n  - {dayOffset: 15, monthOffset:\
        \ FIRST} - 15th Jan and 15th Jul\n  - {dayOffset: 15, monthOffset: 4} - 15th\
        \ Apr and 15th Oct\n  - {dayOffset: 15, monthOffset: LAST} - 15th Jun and\
        \ 15th Dec\nANNUALLY\n  - {dayOffset: 15, monthOffset: FIRST} - 15th Jan\n\
        \  - {dayOffset: 15, monthOffset: 1} - 15th Jan\n  - {dayOffset: LAST, monthOffset:\
        \ 2} - 29th Feb on Leap year, 28th otherwise \n  - {dayOffset: 15, monthOffset:\
        \ 8} - 15th Aug\n  - {dayOffset: 15, monthOffset: LAST} - 15th Dec\n"
      example:
        dayOffset: dayOffset
        monthOffset: monthOffset
      properties:
        dayOffset:
          description: "min: \"1\" and max: \"31\" as strings. Spl. string allowed:\
            \ LAST\n"
          type: string
        monthOffset:
          description: "min: \"1\" and max: \"12\". Spl. string allowed: FIRST / LAST.\n\
            For QUARTERLY only 1 - 3 is allowed and for HALF_YEARLY 1 - 6. This being\
            \ an optional field, shouldn't be passed for MONTHLY.\n"
          type: string
      required:
      - dayOffset
      type: object
    RateCardUsage_value:
      description: Represents rate card of a price plan of usage type
      example:
        slabStrategy: TIER
        rateStrategy: FLAT
        name: name
        slabs:
        - startAfter: 6.027456183070403
          rate: 0.8008281904610115
          order: 2
        - startAfter: 6.027456183070403
          rate: 0.8008281904610115
          order: 2
        - startAfter: 6.027456183070403
          rate: 0.8008281904610115
          order: 2
        - startAfter: 6.027456183070403
          rate: 0.8008281904610115
          order: 2
        - startAfter: 6.027456183070403
          rate: 0.8008281904610115
          order: 2
      properties:
        name:
          type: string
        rateStrategy:
          enum:
          - FLAT
          - PER_UNIT
          type: string
        slabStrategy:
          enum:
          - TIER
          type: string
        slabs:
          items:
            $ref: '#/components/schemas/UsageStrategy'
          maxItems: 10
          minItems: 1
          type: array
      required:
      - name
      - rateStrategy
      - slabStrategy
      - slabs
      type: object
    BundleStrategy_usageMeters_value:
      example:
        startAfter: 2.3021358869347655
      properties:
        startAfter:
          format: double
          type: number
      required:
      - startAfter
      type: object
    StatusResponse_headers:
      additionalProperties: true
      properties:
        Content-Type:
          type: string
      type: object
    EventWithStatusAndEventPipelineInfo_allOf:
      properties:
        EventPipelineInfo:
          $ref: '#/components/schemas/EventPipelineInfo'
      required:
      - eventPipelineInfo
      type: object
    EventPipelineInfo_eventSchema:
      additionalProperties: false
      properties:
        name:
          type: string
        version:
          format: int32
          type: integer
      required:
      - name
      - version
      type: object
    EventPipelineInfo_usageMeters_inner:
      additionalProperties: false
      properties:
        name:
          type: string
        version:
          format: int32
          type: integer
        status:
          enum:
          - PROCESSED_FILTERED_OUT
          - PROCESSED_UNITS_COMPUTED
          type: string
        units:
          type: number
      required:
      - name
      - status
      - version
      type: object
    EventPipelineInfo_pricePlans_inner:
      additionalProperties: false
      properties:
        name:
          type: string
        id:
          format: uuid
          type: string
        cycleStart:
          format: date
          type: string
        cycleEnd:
          format: date
          type: string
        usageMeters:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - cycleEnd
      - cycleStart
      - id
      - name
      type: object
    EventPipelineInfoAccount:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      title: EventPipelineInfoAccount
      type: object
    EventPipelineInfoCustomer:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      title: EventPipelineInfoCustomer
      type: object
    MetricQueryFilterEntry:
      additionalProperties: false
      description: "\n| Metric Name | FilterEntry Name |    Allowed groupBy fields\
        \    |      Default Values      |                 Allowed Values         \
        \         |\n|-------------|------------------|------------------------------|--------------------------|-------------------------------------------------|\n\
        | EVENTS      | ACCOUNT_ID       | ACCOUNT_ID, EVENT_STATUS     | None   \
        \                  | *\\<one or more valid accounts IDs>              |\n\
        | EVENTS      | CUSTOMER_ID      | ACCOUNT_ID, EVENT_STATUS     | None   \
        \                  | *\\<at most one valid customer ID>               |\n\
        | EVENTS      | EVENT_STATUS     | ACCOUNT_ID, EVENT_STATUS     | [PROCESSED,\
        \ UNPROCESSED] | oneOrMoreOf PROCESSED, UNPROCESSED, IN_PROGRESS |\n| USAGE\
        \       | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_NAME | None         \
        \            | *\\<one or more valid accounts ID>               |\n| USAGE\
        \       | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_NAME | None         \
        \            | *\\<at most one valid customer ID>               |\n| USAGE\
        \       | USAGE_METER_NAME | ACCOUNT_ID, USAGE_METER_NAME | None         \
        \            | *\\<one or more valid usage meter name>          |\n| REVENUE\
        \     | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_NAME | None           \
        \          | *\\<one or more valid accounts ID>               |\n| REVENUE\
        \     | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_NAME | None           \
        \          | *\\<at most one valid customer ID>               |\n| REVENUE\
        \     | USAGE_METER_NAME | ACCOUNT_ID, USAGE_METER_NAME | None           \
        \          | *\\<one or more valid usage meter name>          |\n"
      example:
        fieldName: fieldName
        fieldValues:
        - fieldValues
        - fieldValues
      properties:
        fieldName:
          type: string
        fieldValues:
          items:
            type: string
          type: array
      required:
      - fieldName
      - fieldValues
      title: MetricQueryFilterEntry
      type: object
    MetricDataPointsGroupedBy:
      example:
        fieldName: fieldName
        fieldValue: fieldValue
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
      required:
      - fieldName
      - fieldValue
      title: MetricDataPointsGroupedBy
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: Bearer <credential>
      scheme: bearer
      type: http
    apiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey

