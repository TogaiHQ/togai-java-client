/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.core.service.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Metric to be recorded
 */
@ApiModel(description = "Metric to be recorded")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class EventAttribute implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ATTRIBUTE_NAME = "attributeName";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_NAME)
  private String attributeName;

  public static final String SERIALIZED_NAME_ATTRIBUTE_VALUE = "attributeValue";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_VALUE)
  private String attributeValue;

  public static final String SERIALIZED_NAME_ATTRIBUTE_VALUE_UNIT = "attributeValueUnit";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTE_VALUE_UNIT)
  private String attributeValueUnit;

  public EventAttribute() {
  }

  public EventAttribute attributeName(String attributeName) {
    
    this.attributeName = attributeName;
    return this;
  }

   /**
   * Name of the event attribute
   * @return attributeName
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "apiUsage", required = true, value = "Name of the event attribute")

  public String getAttributeName() {
    return attributeName;
  }


  public void setAttributeName(String attributeName) {
    this.attributeName = attributeName;
  }


  public EventAttribute attributeValue(String attributeValue) {
    
    this.attributeValue = attributeValue;
    return this;
  }

   /**
   * Value of the event attribute
   * @return attributeValue
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Value of the event attribute")

  public String getAttributeValue() {
    return attributeValue;
  }


  public void setAttributeValue(String attributeValue) {
    this.attributeValue = attributeValue;
  }


  public EventAttribute attributeValueUnit(String attributeValueUnit) {
    
    this.attributeValueUnit = attributeValueUnit;
    return this;
  }

   /**
   * Unit with which the attribute value was measured. Natively supported units - \&quot;Meters, Miles, Kilometers, Grams, Kilograms, ounces, Pounds, Minutes, Hours, Seconds, Milliseconds, Microseconds, None\&quot;. Clients are free to add any other custom units.
   * @return attributeValueUnit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Unit with which the attribute value was measured. Natively supported units - \"Meters, Miles, Kilometers, Grams, Kilograms, ounces, Pounds, Minutes, Hours, Seconds, Milliseconds, Microseconds, None\". Clients are free to add any other custom units.")

  public String getAttributeValueUnit() {
    return attributeValueUnit;
  }


  public void setAttributeValueUnit(String attributeValueUnit) {
    this.attributeValueUnit = attributeValueUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventAttribute eventAttribute = (EventAttribute) o;
    return Objects.equals(this.attributeName, eventAttribute.attributeName) &&
        Objects.equals(this.attributeValue, eventAttribute.attributeValue) &&
        Objects.equals(this.attributeValueUnit, eventAttribute.attributeValueUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributeName, attributeValue, attributeValueUnit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventAttribute {\n");
    sb.append("    attributeName: ").append(toIndentedString(attributeName)).append("\n");
    sb.append("    attributeValue: ").append(toIndentedString(attributeValue)).append("\n");
    sb.append("    attributeValueUnit: ").append(toIndentedString(attributeValueUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

