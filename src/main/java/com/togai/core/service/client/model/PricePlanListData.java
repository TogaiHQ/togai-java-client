/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.core.service.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.core.service.client.model.PricingCycle;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Data of price plan list
 */
@ApiModel(description = "Data of price plan list")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-26T12:56:18.144176+05:30[Asia/Kolkata]")
public class PricePlanListData implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Status of Price plan
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    DRAFT("DRAFT"),
    
    ACTIVE("ACTIVE"),
    
    ARCHIVED("ARCHIVED");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_PRICING_CYCLE = "pricingCycle";
  @SerializedName(SERIALIZED_NAME_PRICING_CYCLE)
  private PricingCycle pricingCycle;

  public static final String SERIALIZED_NAME_USAGE_METERS = "usageMeters";
  @SerializedName(SERIALIZED_NAME_USAGE_METERS)
  private List<String> usageMeters = new ArrayList<>();

  public static final String SERIALIZED_NAME_PRICING_TYPE = "pricingType";
  @SerializedName(SERIALIZED_NAME_PRICING_TYPE)
  private String pricingType;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updatedAt";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public PricePlanListData() {
  }

  public PricePlanListData name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Name of the price plan
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Name of the price plan")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public PricePlanListData description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * Description of price plan
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Description of price plan")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public PricePlanListData status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Status of Price plan
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Status of Price plan")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public PricePlanListData pricingCycle(PricingCycle pricingCycle) {
    
    this.pricingCycle = pricingCycle;
    return this;
  }

   /**
   * Get pricingCycle
   * @return pricingCycle
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public PricingCycle getPricingCycle() {
    return pricingCycle;
  }


  public void setPricingCycle(PricingCycle pricingCycle) {
    this.pricingCycle = pricingCycle;
  }


  public PricePlanListData usageMeters(List<String> usageMeters) {
    
    this.usageMeters = usageMeters;
    return this;
  }

  public PricePlanListData addUsageMetersItem(String usageMetersItem) {
    this.usageMeters.add(usageMetersItem);
    return this;
  }

   /**
   * Usage meters name linked to the price plan
   * @return usageMeters
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Usage meters name linked to the price plan")

  public List<String> getUsageMeters() {
    return usageMeters;
  }


  public void setUsageMeters(List<String> usageMeters) {
    this.usageMeters = usageMeters;
  }


  public PricePlanListData pricingType(String pricingType) {
    
    this.pricingType = pricingType;
    return this;
  }

   /**
   * Pricing type of the price plan
   * @return pricingType
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Pricing type of the price plan")

  public String getPricingType() {
    return pricingType;
  }


  public void setPricingType(String pricingType) {
    this.pricingType = pricingType;
  }


  public PricePlanListData createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PricePlanListData updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PricePlanListData pricePlanListData = (PricePlanListData) o;
    return Objects.equals(this.name, pricePlanListData.name) &&
        Objects.equals(this.description, pricePlanListData.description) &&
        Objects.equals(this.status, pricePlanListData.status) &&
        Objects.equals(this.pricingCycle, pricePlanListData.pricingCycle) &&
        Objects.equals(this.usageMeters, pricePlanListData.usageMeters) &&
        Objects.equals(this.pricingType, pricePlanListData.pricingType) &&
        Objects.equals(this.createdAt, pricePlanListData.createdAt) &&
        Objects.equals(this.updatedAt, pricePlanListData.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, status, pricingCycle, usageMeters, pricingType, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PricePlanListData {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    pricingCycle: ").append(toIndentedString(pricingCycle)).append("\n");
    sb.append("    usageMeters: ").append(toIndentedString(usageMeters)).append("\n");
    sb.append("    pricingType: ").append(toIndentedString(pricingType)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

