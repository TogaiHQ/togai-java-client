/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.core.service.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.core.service.client.model.MetricName;
import com.togai.core.service.client.model.MetricQueryFilterEntry;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.io.Serializable;

/**
 * Object representing a single metrics query
 */
@ApiModel(description = "Object representing a single metrics query")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MetricQuery implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private MetricName name;

  /**
   * Gets or Sets aggregationPeriod
   */
  @JsonAdapter(AggregationPeriodEnum.Adapter.class)
  public enum AggregationPeriodEnum {
    DAY("DAY"),
    
    WEEK("WEEK"),
    
    MONTH("MONTH");

    private String value;

    AggregationPeriodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AggregationPeriodEnum fromValue(String value) {
      for (AggregationPeriodEnum b : AggregationPeriodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<AggregationPeriodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AggregationPeriodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AggregationPeriodEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return AggregationPeriodEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_AGGREGATION_PERIOD = "aggregationPeriod";
  @SerializedName(SERIALIZED_NAME_AGGREGATION_PERIOD)
  private AggregationPeriodEnum aggregationPeriod;

  public static final String SERIALIZED_NAME_GROUP_BY = "groupBy";
  @SerializedName(SERIALIZED_NAME_GROUP_BY)
  private String groupBy;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private List<MetricQueryFilterEntry> filters = null;

  public MetricQuery() {
  }

  public MetricQuery id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public MetricQuery name(MetricName name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public MetricName getName() {
    return name;
  }


  public void setName(MetricName name) {
    this.name = name;
  }


  public MetricQuery aggregationPeriod(AggregationPeriodEnum aggregationPeriod) {
    
    this.aggregationPeriod = aggregationPeriod;
    return this;
  }

   /**
   * Get aggregationPeriod
   * @return aggregationPeriod
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public AggregationPeriodEnum getAggregationPeriod() {
    return aggregationPeriod;
  }


  public void setAggregationPeriod(AggregationPeriodEnum aggregationPeriod) {
    this.aggregationPeriod = aggregationPeriod;
  }


  public MetricQuery groupBy(String groupBy) {
    
    this.groupBy = groupBy;
    return this;
  }

   /**
   * Get groupBy
   * @return groupBy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGroupBy() {
    return groupBy;
  }


  public void setGroupBy(String groupBy) {
    this.groupBy = groupBy;
  }


  public MetricQuery filters(List<MetricQueryFilterEntry> filters) {
    
    this.filters = filters;
    return this;
  }

  public MetricQuery addFiltersItem(MetricQueryFilterEntry filtersItem) {
    if (this.filters == null) {
      this.filters = new ArrayList<>();
    }
    this.filters.add(filtersItem);
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<MetricQueryFilterEntry> getFilters() {
    return filters;
  }


  public void setFilters(List<MetricQueryFilterEntry> filters) {
    this.filters = filters;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MetricQuery metricQuery = (MetricQuery) o;
    return Objects.equals(this.id, metricQuery.id) &&
        Objects.equals(this.name, metricQuery.name) &&
        Objects.equals(this.aggregationPeriod, metricQuery.aggregationPeriod) &&
        Objects.equals(this.groupBy, metricQuery.groupBy) &&
        Objects.equals(this.filters, metricQuery.filters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, aggregationPeriod, groupBy, filters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MetricQuery {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    aggregationPeriod: ").append(toIndentedString(aggregationPeriod)).append("\n");
    sb.append("    groupBy: ").append(toIndentedString(groupBy)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

