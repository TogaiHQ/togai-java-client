/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.core.service.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * Status about the event ingestion.
 */
@ApiModel(description = "Status about the event ingestion.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class IngestionStatus implements Serializable {
  private static final long serialVersionUID = 1L;

  /**
   * Ingestion status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    INGESTION_IN_PROGRESS("INGESTION_IN_PROGRESS"),
    
    INGESTION_FAILED("INGESTION_FAILED"),
    
    INGESTION_FAILED_SCHEMA_NOT_DEFINED("INGESTION_FAILED_SCHEMA_NOT_DEFINED"),
    
    INGESTION_FAILED_UNITS_INVALID("INGESTION_FAILED_UNITS_INVALID"),
    
    INGESTION_COMPLETED_NO_MATCHING_METERS("INGESTION_COMPLETED_NO_MATCHING_METERS"),
    
    INGESTION_COMPLETED_EVENT_METERED("INGESTION_COMPLETED_EVENT_METERED"),
    
    INGESTION_COMPLETED_EVENT_NOT_METERED("INGESTION_COMPLETED_EVENT_NOT_METERED"),
    
    UNKNOWN("UNKNOWN");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_STATUS_DESCRIPTION = "statusDescription";
  @SerializedName(SERIALIZED_NAME_STATUS_DESCRIPTION)
  private String statusDescription;

  public IngestionStatus() {
  }

  public IngestionStatus status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Ingestion status
   * @return status
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(example = "INGESTION_COMPLETED", required = true, value = "Ingestion status")

  public StatusEnum getStatus() {
    return status;
  }


  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public IngestionStatus statusDescription(String statusDescription) {
    
    this.statusDescription = statusDescription;
    return this;
  }

   /**
   * Get statusDescription
   * @return statusDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Ingestion Completed successfully", value = "")

  public String getStatusDescription() {
    return statusDescription;
  }


  public void setStatusDescription(String statusDescription) {
    this.statusDescription = statusDescription;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IngestionStatus ingestionStatus = (IngestionStatus) o;
    return Objects.equals(this.status, ingestionStatus.status) &&
        Objects.equals(this.statusDescription, ingestionStatus.statusDescription);
  }

  @Override
  public int hashCode() {
    return Objects.hash(status, statusDescription);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IngestionStatus {\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDescription: ").append(toIndentedString(statusDescription)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

