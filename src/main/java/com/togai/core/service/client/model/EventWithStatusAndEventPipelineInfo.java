/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.core.service.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.core.service.client.model.Event;
import com.togai.core.service.client.model.EventPipelineInfo;
import com.togai.core.service.client.model.IngestionStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

/**
 * EventWithStatusAndEventPipelineInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2022-09-26T12:56:18.144176+05:30[Asia/Kolkata]")
public class EventWithStatusAndEventPipelineInfo implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_EVENT_PAYLOAD = "eventPayload";
  @SerializedName(SERIALIZED_NAME_EVENT_PAYLOAD)
  private Event eventPayload;

  public static final String SERIALIZED_NAME_INGESTION_STATUS = "ingestionStatus";
  @SerializedName(SERIALIZED_NAME_INGESTION_STATUS)
  private IngestionStatus ingestionStatus;

  public static final String SERIALIZED_NAME_EVENT_PIPELINE_INFO = "EventPipelineInfo";
  @SerializedName(SERIALIZED_NAME_EVENT_PIPELINE_INFO)
  private EventPipelineInfo eventPipelineInfo;

  public EventWithStatusAndEventPipelineInfo() {
  }

  public EventWithStatusAndEventPipelineInfo eventPayload(Event eventPayload) {
    
    this.eventPayload = eventPayload;
    return this;
  }

   /**
   * Get eventPayload
   * @return eventPayload
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public Event getEventPayload() {
    return eventPayload;
  }


  public void setEventPayload(Event eventPayload) {
    this.eventPayload = eventPayload;
  }


  public EventWithStatusAndEventPipelineInfo ingestionStatus(IngestionStatus ingestionStatus) {
    
    this.ingestionStatus = ingestionStatus;
    return this;
  }

   /**
   * Get ingestionStatus
   * @return ingestionStatus
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")

  public IngestionStatus getIngestionStatus() {
    return ingestionStatus;
  }


  public void setIngestionStatus(IngestionStatus ingestionStatus) {
    this.ingestionStatus = ingestionStatus;
  }


  public EventWithStatusAndEventPipelineInfo eventPipelineInfo(EventPipelineInfo eventPipelineInfo) {
    
    this.eventPipelineInfo = eventPipelineInfo;
    return this;
  }

   /**
   * Get eventPipelineInfo
   * @return eventPipelineInfo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EventPipelineInfo getEventPipelineInfo() {
    return eventPipelineInfo;
  }


  public void setEventPipelineInfo(EventPipelineInfo eventPipelineInfo) {
    this.eventPipelineInfo = eventPipelineInfo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EventWithStatusAndEventPipelineInfo eventWithStatusAndEventPipelineInfo = (EventWithStatusAndEventPipelineInfo) o;
    return Objects.equals(this.eventPayload, eventWithStatusAndEventPipelineInfo.eventPayload) &&
        Objects.equals(this.ingestionStatus, eventWithStatusAndEventPipelineInfo.ingestionStatus) &&
        Objects.equals(this.eventPipelineInfo, eventWithStatusAndEventPipelineInfo.eventPipelineInfo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eventPayload, ingestionStatus, eventPipelineInfo);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EventWithStatusAndEventPipelineInfo {\n");
    sb.append("    eventPayload: ").append(toIndentedString(eventPayload)).append("\n");
    sb.append("    ingestionStatus: ").append(toIndentedString(ingestionStatus)).append("\n");
    sb.append("    eventPipelineInfo: ").append(toIndentedString(eventPipelineInfo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

